{"version":3,"sources":["components/formula/components/FormulaField.jsx","components/formula/components/FormulaEdit.jsx","components/formula/constants.js","components/formula/components/FunctionList.jsx","components/formula/index.jsx"],"names":["SubMenu","menu","handleMenuItemClick","ItemGroup","callback","info","item","key","split","CurrentForm","_ref","data","handle","react_default","a","createElement","style","width","mode","className","onClick","map","index","Item","OtherForms","_ref2","form","title","items","FormulaField","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","switchPanel","bind","assertThisInitialized","state","current","fields","allFields","panel","_this2","$","get","formId","props","formulaData","forms","response","status","setState","params","undefined","just","_this3","float","FormulaField_CurrentForm","changeFormulaData","FormulaField_OtherForms","Component","FormulaEdit","setEditingBoard","refs","editingBoard","onChange","e","setFormula","target","value","rows","ref","OPRATOR","sign","ARR_FUNC_TOKEN","统计函数","name","desc","数据（含货币）函数","expr","字符串函数"],"mappings":"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","file":"static/js/1.e911095b.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport {Menu} from 'antd';\r\nimport $ from 'jquery';\r\n\r\n\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\n\r\nconst handleMenuItemClick = (callback) => (info) => {\r\n\tconst item = info.key.split(\"-\")[1]\r\n\tcallback(item)\r\n}\r\n\r\n\r\n// 本表单字段\r\nconst CurrentForm = ({data, handle}) => {\r\n\treturn (\r\n\t\t<Menu\r\n\t\t\tstyle={{ width: 158 }}\r\n\t\t\tmode=\"inline\"\r\n\t\t\tclassName=\"formula-modal-field-list thin-scroll\"\r\n\t\t\tonClick={handleMenuItemClick(handle)}\r\n\t\t>\r\n\t\t\t{\r\n\t\t\t\tdata && data.map((item, index) =>\r\n\t\t\t\t\t<Menu.Item key={\"item-\" + \"本表单.\" + item + \"-\" + index}>{item}</Menu.Item>)\r\n\t\t\t}\r\n\t\t</Menu>\r\n\t)\r\n}\r\n\r\n// 其它表单字段\r\nconst OtherForms = ({data, handle}) => {\r\n\treturn (\r\n\t\t<Menu\r\n\t\t\tstyle={{ width: 158 }}\r\n\t\t\tmode=\"inline\"\r\n\t\t\tclassName=\"formula-modal-field-list thin-scroll\"\r\n\t\t\tonClick={handleMenuItemClick(handle)}\r\n\t\t>\r\n\t\t\t{\r\n\t\t\t\tdata && data.map((form, index) =>\r\n\t\t\t\t<SubMenu key={\"sub\" + index} title={form.form}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tform.items.map((item, index) =>\r\n\t\t\t\t\t\t\t<Menu.Item key={\"item-\" + form.form + \".\" + item + \"-\" + index}>{item}</Menu.Item>)\r\n\t\t\t\t\t}\r\n\t\t\t\t</SubMenu>)\r\n\t\t\t}\r\n\t\t</Menu>\r\n\t)\r\n}\r\n\r\nexport default class FormulaField extends Component{\r\n\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.switchPanel = this.switchPanel.bind(this)\r\n\t\tthis.state = {\r\n\t\t\tcurrent: '1',\r\n\t\t\tfields: [],\r\n\t\t\tallFields: [],\r\n\t\t\tpanel: 'self'\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\r\n\t\t// 本表单\r\n\t\t$.get('/general/appbuilder/web/appdesign/appform/items',\r\n\t\t\t{\r\n\t\t\t\tformId: this.props.formulaData.formId,\r\n\t\t\t\tforms: ''\r\n\t\t\t},\r\n\t\t\tresponse => {\r\n\t\t\t\tif(response.status === 'ok') {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tfields: response.data\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\t// 其它表单\r\n\t\tif(this.props.formulaData.forms !== '') {\r\n\r\n\t\t\tlet params = {\r\n\t\t\t\tformId: this.props.formulaData.formId,\r\n\t\t\t\tforms: this.props.formulaData.forms\r\n\t\t\t}\r\n\r\n\t\t\t//仅提取触发器的数据填充和数据过滤有此字段\r\n\t\t\tif(this.props.formulaData.just != undefined && this.props.formulaData.just == true){\r\n\t\t\t\tparams['just'] = true\r\n\t\t\t}\r\n\r\n\t\t\t$.get('/general/appbuilder/web/appdesign/appform/items', params, response => {\r\n\t\t\t\t\tif(response.status === 'ok') {\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\tallFields: response.data\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div className=\"formula-modal-field-wrap\">\r\n\t\t\t\t<h3 className=\"formula-modal-body-title\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.props.formulaData.forms === '' ?\r\n\t\t\t\t\t\t\t'本表单' :\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<span onClick={() => this.switchPanel('self')}>本表单</span>\r\n\t\t\t\t\t\t\t\t<span onClick={() => this.switchPanel('others')} style={{float:'right'}}>其它表单</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</h3>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.formulaData.forms === '' ?\r\n\t\t\t\t\t\t<CurrentForm data={this.state.fields} handle={this.props.changeFormulaData} /> :\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.state.panel === 'self' ?\r\n\t\t\t\t\t\t\t\t<CurrentForm data={this.state.fields} handle={this.props.changeFormulaData} /> :\r\n\t\t\t\t\t\t\t\t<OtherForms data={this.state.allFields} handle={this.props.changeFormulaData} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tswitchPanel(panel) {\r\n\t\tthis.setState({\r\n\t\t\tpanel\r\n\t\t})\r\n\t}\r\n}\r\n","import React, {Component} from 'react'\r\n\r\nexport default class FormulaEdit extends Component{\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.setEditingBoard(this.refs.editingBoard)\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div >\r\n\t\t\t\t<h3 className=\"formula-modal-edit-title\">公式编辑</h3>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tonChange={(e) => this.props.setFormula(e.target.value)}\r\n\t\t\t\t\trows=\"3\"\r\n\t\t\t\t\tclassName=\"formula-edit-textarea thin-scroll\"\r\n\t\t\t\t\tref=\"editingBoard\"\r\n\t\t\t\t\tvalue={this.props.value}>\r\n\t\t\t\t</textarea>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","\r\nexport const OPRATOR = [\r\n\t{ sign: '+', title: '加号'},\r\n\t{ sign: '-', title: '减号'},\r\n\t{ sign: '*', title: '乘号'},\r\n\t{ sign: '/', title: '除号'},\r\n\t{ sign: 'MOD', title: '取余'},\r\n\t{ sign: '=', title: '等于'},\r\n\t{ sign: '(', title: '左括号'},\r\n\t{ sign: ')', title: '右括号'},\r\n\t{ sign: '<', title: '小于'},\r\n\t{ sign: '>', title: '大于'},\r\n\t{ sign: '<=', title: '小于或等于'},\r\n\t{ sign: '>=', title: '大于或等于'},\r\n\t{ sign: '<>', title: '不等于'},\r\n\t{ sign: '!', title: '非'},\r\n\t{ sign: '&&', title: '且'},\r\n\t{ sign: '||', title: '或'},\r\n\t{ sign: '1', title: ''},\r\n\t{ sign: '2', title: ''},\r\n\t{ sign: '3', title: ''},\r\n\t{ sign: '4', title: ''},\r\n\t{ sign: '5', title: ''},\r\n\t{ sign: '6', title: ''},\r\n\t{ sign: '7', title: ''},\r\n\t{ sign: '8', title: ''},\r\n\t{ sign: '9', title: ''},\r\n\t{ sign: '0', title: ''},\r\n]\r\n\r\n\r\nexport const ARR_FUNC_TOKEN = {\r\n\t\"统计函数\":[\r\n\t\t{\r\n\t\t\t\"name\": \"COUNT()\",\r\n\t\t\t\"desc\": \"此函数返回记录数。\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"COUNT(<字段名>)\",\r\n\t\t\t\"desc\": \"此函数返回指定字段的个数。\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"SUM(<数值型或货币型字段名>)\",\r\n\t\t\t\"desc\": \"此函数返回数字型或货币型字段的合计值。\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"AVG(<数值型或货币型字段名>)\",\r\n\t\t\t\"desc\": \"此函数返回数字型或货币型字段的平均值。\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"MAX(<数值型或货币型字段名>)\",\r\n\t\t\t\"desc\": \"此函数返回数字型或货币型字段的最大值。\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"MIN(<数值型或货币型字段名>)\",\r\n\t\t\t\"desc\": \"此函数返回数字型或货币型字段的最小值。\"\r\n\t\t}\r\n\t],\r\n\t\"数据（含货币）函数\":[\r\n\t\t{\r\n\t\t\t\"name\": \"FLOOR(<数值表达式>)\",\r\n\t\t\t\"desc\": \"此函数返回不超过表达式数值的最大整数。\\\r\n\t\t\t\t例如：FLOOR(125.2) 返回结果为：125\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"ROUND(<数值表达式>,整数)\",\r\n\t\t\t\"desc\": \"此函数返回指定表达式四舍五入到整数部分规定保留的小数点位数的值。\\\r\n    \t\t例如：ROUND(125.256,2) 返回结果为：125.26\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"RAND()\",\r\n\t\t\t\"desc\": \"此函数返回随机数。\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"ABS(<数值表达式>)\",\r\n\t\t\t\"desc\": \"此函数返回数值表达式的绝对值。\\\r\n    \t\t例如：ABS(-125) 返回结果为：125\"\r\n\t\t}\r\n\t],\r\n\t\"日期和时间函数\":[\r\n\t\t{\r\n\t\t\t\"name\": \"YEAR(<日期表达式>)\",\r\n\t\t\t\"desc\": \"此函数返回日期表达式的年份值。\\\r\n    \t\t例如：YEAR(#2007.1.28#) 返回结果为：2007\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"MONTH(<日期表达式>)\",\r\n\t\t\t\"desc\": \"此函数返回日期表达式的月份值。\\\r\n    \t\t例如：MONTH(#2007.1.28#) 返回结果为：1\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DAY(<日期表达式>)\",\r\n\t\t\t\"desc\": \"此函数返回日期表达式的天数。\\\r\n    \t\t例如：DAY(#2007.1.28#) 返回结果为：28\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"QUARTER(<日期表达式>)\",\r\n\t\t\t\"desc\": \"此函数返回日期表达式的季度数。\\\r\n    \t\t例如：QUARTER(#2007.1.28#) 返回结果为：1\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"WEEK(<日期表达式>)\",\r\n\t\t\t\"desc\": \"此函数返回日期表达式的星期数。\\\r\n    \t\t例如：WEEK(#2007.1.28#) 返回结果为：4\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"HOUR(<日期表达式>)\",\r\n\t\t\t\"desc\": \"此函数返回日期表达式的小时数。\\\r\n    \t\t例如：HOUR(#2007.1.28 09:59:42#) 返回结果为：9\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"MINUTE(<日期表达式>)\",\r\n\t\t\t\"desc\": \"此函数返回日期表达式的分钟数。\\\r\n    \t\t例如：MINUTE(#2007.1.28 09:59:42#) 返回结果为：59\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"SECOND(<日期表达式>)\",\r\n\t\t\t\"desc\": \"此函数返回日期表达式的秒数。\\\r\n    \t\t例如：SECOND(#2007.1.28 09:59:42#) 返回结果为：42\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"THISDATE\",\r\n\t\t\t\"desc\": \"此函数返回当前日期。\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"YEARBETWEEN(<日期表达式1>,<日期表达式2>)\",\r\n\t\t\t\"desc\": \"此函数返回日期表达式1到日期表达式2的年份。\\\r\n    \t\t例如：YEARBETWEEN(#2005.07.03#,#2007.07.28#) 返回结果为：2\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"MONTHBETWEEN(<日期表达式1>,<日期表达式2>)\",\r\n\t\t\t\"desc\": \"此函数返回日期表达式1到日期表达式2的月份。\\\r\n    \t\t例如：MONTHBETWEEN(#2007.01.28#,#2007.07.28#) 返回结果为：6\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DAYBETWEEN(<日期表达式1>,<日期表达式2>)\",\r\n\t\t\t\"desc\": \"此函数返回日期表达式1到日期表达式2的天数。\\\r\n    \t\t例如：DAYBETWEEN(#2007.01.03#,#2007.01.28#) 返回结果为：25\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"QUARTERBETWEEN(<日期表达式1>,<日期表达式2>)\",\r\n\t\t\t\"desc\": \"此函数返回日期表达式1到日期表达式2的季度数。\\\r\n    \t\t例如：QUARTERBETWEEN(#2007.01.03#,#2007.07.28#) 返回结果为：2\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"WEEKBETWEEN(<日期表达式1>,<日期表达式2>)\",\r\n\t\t\t\"desc\": \"此函数返回日期表达式1到日期表达式2的周数。\\\r\n    \t\t例如：WEEKBETWEEN(#2007.01.03#,#2007.01.28#) 返回结果为：4\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"HOURBETWEEN(<日期表达式1>,<日期表达式2>)\",\r\n\t\t\t\"desc\": \"此函数返回日期表达式1到日期表达式2的小时数。\\\r\n    \t\t例如：HOURBETWEEN(#2007.01.03 09:59:42#,#2007.01.03 10:59:42#) 返回结果为：1\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"MINUTEBETWEEN(<日期表达式1>,<日期表达式2>)\",\r\n\t\t\t\"desc\": \"此函数返回日期表达式1到日期表达式2的分钟数。\\\r\n    \t\t例如：MINUTEBETWEEN(#2007.01.03 09:59:42#,#2007.01.03 10:59:42#) 返回结果为：60\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"SECONDBETWEEN(<日期表达式1>,<日期表达式2>)\",\r\n\t\t\t\"desc\": \"此函数返回日期表达式1到日期表达式2的秒数。\\\r\n    \t\t例如：SECONDBETWEEN(#2007.01.03 09:59:42#,#2007.01.03 10:59:42#) 返回结果为：3600\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"ADDYEAR(<日期表达式>,整数)\",\r\n\t\t\t\"desc\": \"此函数返回日期表达式增加指定年数后的日期值。\\\r\n    \t\t例如：ADDYEAR(#2005.07.03#,2) 返回结果为：#2007.07.03#\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"ADDMONTH(<日期表达式>,整数)\",\r\n\t\t\t\"desc\": \"此函数返回日期表达式增加指定月数后的日期值。\\\r\n    \t\t例如：ADDMONTH(#2007.07.03#,2) 返回结果为：#2007.09.03#\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"ADDDAY(<日期表达式>,整数)\",\r\n\t\t\t\"desc\": \"此函数返回日期表达式增加指定天数后的日期值。\\\r\n    \t\t例如：ADDDAY(#2005.07.03#,2) 返回结果为：#2005.07.05#\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"ADDQUARTER(<日期表达式>,整数)\",\r\n\t\t\t\"desc\": \"此函数返回日期表达式增加指定季度数后的日期值。\\\r\n    \t\t例如：ADDQUARTER(#2007.01.03#,2) 返回结果为：#2007.07.03#\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"ADDWEEK(<日期表达式>,整数)\",\r\n\t\t\t\"desc\": \"此函数返回日期表达式增加指定周数后的日期值。\\\r\n    \t\t例如：ADDWEEK(#2007.01.03#,3) 返回结果为：#2007.01.24#\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"ADDHOUR(<日期表达式>,整数)\",\r\n\t\t\t\"desc\": \"此函数返回日期表达式增加指定小时数后的日期值。\\\r\n    \t\t例如：ADDHOUR(#09:59:42#,1) 返回结果为：#10:59:42#\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"ADDMINUTE(<日期表达式>,整数)\",\r\n\t\t\t\"desc\": \"此函数返回日期表达式增加指定分数后的日期值。\\\r\n    \t\t例如：ADDMINUTE(#09:59:42#,1) 返回结果为：#10:00:42#\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"ADDSECOND(<日期表达式>,整数)\",\r\n\t\t\t\"desc\": \"此函数返回日期表达式增加指定秒数后的日期值。\\\r\n    \t\t例如：ADDSECOND(#09:59:42#,1) 返回结果为：#09:59:43#\"\r\n\t\t},\r\n\t],\r\n\t\"字符串函数\": [\r\n\t\t{\r\n\t\t\t\"name\": \"CONCAT(<字符串表达式1>,<字符串表达式2>,...,<字符串表达式n>)\",\r\n\t\t\t\"desc\": \"此函数连接两个字符串。\\\r\n    \t\t例如：CONCAT(\\\"abc\\\",\\\"def\\\") 返回结果为：\\\"abcdef\\\"\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"TRIM(<字符串表达式>)\",\r\n\t\t\t\"desc\": \"此函数截取字符串表达式左右两边多余空格。\\\r\n    \t\t例如：trim(\\\"  abc  \\\") 返回结果为：\\\"abc\\\"\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"LTRIM(<字符串表达式>)\",\r\n\t\t\t\"desc\": \"此函数截取字符串表达式左边多余空格。\\\r\n    \t\t例如：LTRIM(\\\"  abc  \\\") 返回结果为：\\\"abc  \\\"\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"RTRIM(<字符串表达式>)\",\r\n\t\t\t\"desc\": \"此函数截取字符串表达式右边多余空格。\\\r\n    \t\t例如：RTRIM(\\\"  abc  \\\") 返回结果为：\\\"  abc\\\"\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"SUBSTR(<字符串表达式>,<起始位>,<长度>)\",\r\n\t\t\t\"desc\": \"此函数返回字符串表达式从[起始位]开始共[长度]个字符的子串。\\\r\n    \t\t例如：SUBSTR(\\\"abcd\\\", 2, 2) 返回结果为：\\\"bc\\\"\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"STRLEN(<字符串表达式>)\",\r\n\t\t\t\"desc\": \"此函数返回字符串表达式所包含的字符个数。\\\r\n    \t\t例如：STRLEN(\\\"abcd你好\\\") 返回结果为：6\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"LEFT(<字符串表达式>,<长度>)\",\r\n\t\t\t\"desc\": \"此函数返回字符串表达式左边开始共[长度]个字符的子串。\\\r\n    \t\t例如：LEFT(\\\"abcd你好\\\", 5) 返回结果为：\\\"abcd你\\\"\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"RIGHT(<字符串表达式>,<长度>)\",\r\n\t\t\t\"desc\": \"此函数返回字符串表达式右边开始共[长度]个字符的子串。\\\r\n    \t\t例如：RIGHT(\\\"abcd你好\\\", 5) 返回结果为：\\\"bcd你好\\\"\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"STRPOS(<字符串表达式1>,<字符串表达式2>)\",\r\n\t\t\t\"desc\": \"此函数返回字符串表达式1中首次出现字符串表达式2的位置，字符位置从1开始计数，未搜索到时返回0。\\\r\n    \t\t例如：STRPOS(\\\"abcd你好\\\", \\\"bcd\\\") 返回结果为：1\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"REPLACE(<待搜索的字符串表达式>,<待查找的字符串表达式>,<替换用的字符串表达式>)\",\r\n\t\t\t\"desc\": \"此函数返回用替换用的字符串表达式替换待搜索的字符串表达式中出现的所有待查找的字符串表达式。\\\r\n    \t\t例如：REPLACE(\\\"abcdefghicde\\\",\\\"cde\\\",\\\"xxx\\\") 返回结果为：abxxxfghixxx\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"REG(<字符串表达式>,<正则表达式>)\",\r\n\t\t\t\"desc\": \"此函数返回字符串表达式是否满足正则表达式规则，满足返回1，否则返回0。\\\r\n    \t\t例如：REG(\\\"fo\\no\\\", \\\"^fo\\no$\\\") 返回结果为：1\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"PINYINQUANMA(<字符串表达式>)\",\r\n\t\t\t\"desc\": \"返回<字符串表达式>对应的拼音。\\\r\n    \t\t例如：PINYINQUANMA(\\\"中国\\\")，返回结果为：zhongguo\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"PINYINJIANMA(<字符串表达式>)\",\r\n\t\t\t\"desc\": \"返回<字符串表达式>对应的拼音简称。\\\r\n    \t\t例如：PINYINJIANMA(\\\"中国\\\")，返回结果为：zg\"\r\n\t\t}\r\n\t],\r\n\t\"集合函数\":[\r\n\t\t{\r\n\t\t\t\"name\": \"SET(<表达式1>,<表达式2>,<表达式3>)\",\r\n\t\t\t\"desc\": \"例如：SET(1,2,3,4)，SET(\\\"abc\\\",\\\"cde\\\",\\\"efg\\\"）\"\r\n\t\t}\r\n\t],\r\n\t\"转换函数\":[\r\n\t\t{\r\n\t\t\t\"name\": \"STRTODATETIME(<字符串表达式>)\",\r\n\t\t\t\"desc\": \"字符转日期。\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"STRTOFLOAT(<字符串表达式>)\",\r\n\t\t\t\"desc\": \"字符转数值。\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"FLOATTOSTR(<数值表达式>)\",\r\n\t\t\t\"desc\": \"数值转字符。\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"FLOATTODATETIME(<数值表达式>)\",\r\n\t\t\t\"desc\": \"数值转日期。\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DATETIMETOSTR(<日期表达式>)\",\r\n\t\t\t\"desc\": \"日期转字符。\"\r\n\t\t}\r\n\t],\r\n\t\"类型不定函数\":[\r\n\t\t{\r\n\t\t\t\"name\": \"IF THEN [ELSE] END\",\r\n\t\t\t\"desc\": \"例如：IF 商品=\\\"牛奶\\\" THEN 0.02 ELSE 0.1 END\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"CASE IF cexpr1 THEN expr1 IF cexpr2 THEN expr2 [ELSE exprn] END\",\r\n\t\t\t\"desc\": \"例如：CASE IF 商品=\\\"牛奶\\\" THEN 0.02\\\r\n                 IF 商品=\\\"面包\\\" THEN 0.015\\\r\n                 IF 商品=\\\"咖啡\\\" THEN 0.15\\\r\n                 ELSE 0.1 END\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"GREATER(表达式1,表达式2)\",\r\n\t\t\t\"desc\": \"返回两者中较大者\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"LESS(表达式1,表达式2)\",\r\n\t\t\t\"desc\": \"返回两者中较小者\"\r\n\t\t}\r\n\t],\r\n\t\"系统函数\":[\r\n\t\t{\r\n\t\t\t\"name\": \"LOGIN_UNIT\",\r\n\t\t\t\"desc\": \"当前单位\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"LOGIN_USER\",\r\n\t\t\t\"desc\": \"当前用户\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"LOGIN_DEPT\",\r\n\t\t\t\"desc\": \"当前部门\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"LOGIN_PRIV\",\r\n\t\t\t\"desc\": \"当前角色\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"WRITE_DEPT\",\r\n\t\t\t\"desc\": \"制单部门\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"WRITER\",\r\n\t\t\t\"desc\": \"制单人\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"WRITE_TIME\",\r\n\t\t\t\"desc\": \"制单时间\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"SYSDATE\",\r\n\t\t\t\"desc\": \"系统日期\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"LOGIN_USER_ID\",\r\n\t\t\t\"desc\": \"当前用户ID\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"LOGIN_DEPT_ID\",\r\n\t\t\t\"desc\": \"当前部门ID\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"LONG_DEPT_NAME\",\r\n\t\t\t\"desc\": \"长部门名称\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"LOGIN_OTHER_PRIV\",\r\n\t\t\t\"desc\": \"当前辅助角色\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"CUR_GEOLOCATION\",\r\n\t\t\t\"desc\": \"返回用户当前所在的地理位置。\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"LOGIN_UID\",\r\n\t\t\t\"desc\": \"当前用户UID\" \r\n\t\t}\r\n\t],\r\n\t\"常量\":[\r\n\t\t{\r\n\t\t\t\"name\": \"TRUE\",\r\n\t\t\t\"desc\": \"真\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"FALSE\",\r\n\t\t\t\"desc\": \"假\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"NULL\",\r\n\t\t\t\"desc\": \"空\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"#2007.1.28#\",\r\n\t\t\t\"desc\": \"返回2007年1月28日。\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"#1.28#\",\r\n\t\t\t\"desc\": \"返回1月28日。\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"\\\"张三\\\"\",\r\n\t\t\t\"desc\": \"返回字符常量张三\"\r\n\t\t}\r\n\t],\r\n\t\"算术运算符\":[\r\n\t\t{\r\n\t\t\t\"name\": \"+\",\r\n\t\t\t\"desc\": \"加\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"-\",\r\n\t\t\t\"desc\": \"减\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"*\",\r\n\t\t\t\"desc\": \"乘\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"/\",\r\n\t\t\t\"desc\": \"除\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DIV\",\r\n\t\t\t\"desc\": \"整除\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"MOD\",\r\n\t\t\t\"desc\": \"取余\"\r\n\t\t}\r\n\t],\r\n\t\"关系运算符\":[\r\n\t\t{\r\n\t\t\t\"name\":\"=\",\r\n\t\t\t\"desc\":\"相等比较符\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\":\"<>\",\r\n\t\t\t\"desc\":\"不等比较符\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\":\"<\",\r\n\t\t\t\"desc\":\"小于比较符\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\":\">\",\r\n\t\t\t\"desc\":\"大于比较符\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\":\"<=\",\r\n\t\t\t\"desc\":\"小于等于比较符\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\":\">=\",\r\n\t\t\t\"desc\":\"大于等于比较符\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\":\"LIKE(<表达式>)\",\r\n\t\t\t\"desc\":\"包含比较符\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\":\"LLIKE(<表达式>)\",\r\n\t\t\t\"desc\":\"左包含比较符\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\":\"RLIKE(<表达式>)\",\r\n\t\t\t\"desc\":\"右包含比较符\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\":\"IN(<集合表达式>)\",\r\n\t\t\t\"desc\":\"属于比较符\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\":\"BETWEEN(<表达式1>,<表达式2>)\",\r\n\t\t\t\"desc\":\"介于两值之间比较符\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\":\"ISNOTNULL\",\r\n\t\t\t\"desc\":\"有值比较符\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\":\"ISNULL\",\r\n\t\t\t\"desc\":\"无值比较符\"\r\n\t\t}\r\n\t],\r\n\t\"逻辑运算符\":[\r\n\t\t{\r\n\t\t\t\"name\": \"&&\",\r\n\t\t\t\"desc\": \"与\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"||\",\r\n\t\t\t\"desc\": \"或\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"!\",\r\n\t\t\t\"desc\": \"非\"\r\n\t\t},\r\n\t],\r\n\t\"其他\":[\r\n\t\t{\r\n\t\t\t\"name\": \"()\",\r\n\t\t\t\"desc\": \"括号\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"//\",\r\n\t\t\t\"desc\": \"注释符\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \",\",\r\n\t\t\t\"desc\": \"逗号分隔符\"\r\n\t\t}\r\n\t]\r\n}\r\n","import React, {Component} from 'react'\r\nimport {Collapse, Tooltip} from 'antd';\r\nimport {ARR_FUNC_TOKEN} from '../constants';\r\nconst Panel = Collapse.Panel;\r\n\r\nexport default class FunctionList extends Component{\r\n\r\n  handleChange(key) {\r\n      // console.log(key);\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"formula-modal-funclist-wrap\" >\r\n        <h3 className=\"formula-modal-funclist-title\">函数列表</h3>\r\n        <div className=\"formula-panel-collapse-wrap thin-scroll\">\r\n          <Collapse defaultActiveKey={['0']} onChange={this.handleChange.bind(this)} className=\"formula-panel-collapse\">\r\n            {Object.keys(ARR_FUNC_TOKEN).map((collectionFuncName, collectionIndex) =>\r\n              (\r\n                <Panel header={collectionFuncName} key={collectionIndex} className=\"formula-panel-collapse-titles\">\r\n                  <ul>\r\n                    {ARR_FUNC_TOKEN[collectionFuncName].map((func, funcIndex) =>\r\n                      (\r\n                      \t<Tooltip title={func.name}>\r\n                        <li className=\"formula-panel-collapse-items\"\r\n                          key={funcIndex}\r\n                          onClick={() => this.props.setFuncDesc(func.desc)}\r\n                          onDoubleClick={() => this.props.changeFormulaData(func.name)}\r\n                        >{func.name}</li>\r\n                        </Tooltip>\r\n                      )\r\n                    )}\r\n                  </ul>\r\n                </Panel>\r\n              )\r\n            )}\r\n          </Collapse>\r\n        </div>\r\n        <div className=\"formula-panel-function-tips thin-scroll\">\r\n          <div className=\"formula-panel-tips-content\" >\r\n            <span className=\"formula-panel-tips-title\">说明：</span>\r\n            <span className=\"formula-panel-tip\">{this.props.funcDesc}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import './formula.css'\r\nimport React, {Component} from 'react'\r\nimport { Modal, Button ,Row, Col, message, notification } from 'antd';\r\nimport FormulaField from './components/FormulaField'\r\nimport FormulaEdit  from './components/FormulaEdit'\r\nimport FunctionList from './components/FunctionList'\r\nimport FormulaOprator from  './components/FormulaOprator'\r\nimport $ from 'jquery';\r\n\r\nclass Formula extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tconst { formulaData } = this.props\r\n\t\tconst initialValue = formulaData.value || ''\r\n\t\tconst initialCursorIndex = initialValue.length\r\n\t\tthis.state= {\r\n\t\t\tvisible: true,\r\n\t\t\tfuncDesc: '',\r\n\t\t\tformulaValue: initialValue,\r\n\t\t\teditingBoard: null,\r\n\t\t\tinitialCursorIndex,\r\n\t\t\tokLoading: false,\r\n\t\t\tvalidateLoading: false\r\n\t\t}\r\n\t}\r\n\r\n\tsetEditingBoard(ref) {\r\n\t\tthis.setState({\r\n\t\t\teditingBoard: ref\r\n\t\t})\r\n\t}\r\n\r\n\tsetFormula(value) {\r\n\t\tthis.setState({\r\n\t\t\tformulaValue: value\r\n\t\t})\r\n\t}\r\n\r\n\tchangeFormulaData(value) {\r\n\t\tconst eb = this.state.editingBoard\r\n\t\tif(eb.selectionStart !== eb.selectionEnd) {\r\n\t\t\tthis.replaceFormulaData(eb.selectionStart, eb.selectionEnd, value)\r\n\t\t\tthis.state.initialCursorIndex = -1\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif(eb.selectionStart === eb.value.length || this.state.initialCursorIndex !== -1) {\r\n\t\t\tthis.appendFormulaData(value)\r\n\t\t\tthis.state.initialCursorIndex = -1\r\n\t\t\treturn\r\n\t\t}\r\n\t\tthis.insertFormulaData(eb.selectionStart, value)\r\n\t\tthis.state.initialCursorIndex = -1\r\n\t}\r\n\r\n\tappendFormulaData(value) {\r\n\t\tthis.setState((prevState) => ({\r\n\t\t\tformulaValue: prevState.formulaValue + value\r\n\t\t}))\r\n\t\tthis.state.editingBoard.focus()\r\n\t}\r\n\r\n\tinsertFormulaData(offset, value) {\r\n\t\tthis.setState((prevState) => ({\r\n\t\t\tformulaValue: prevState.formulaValue.slice(0, offset) + value + prevState.formulaValue.slice(offset)\r\n\t\t}))\r\n\t\tthis.state.editingBoard.focus()\r\n\t\t//debugger\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.state.editingBoard.setSelectionRange(Number(offset + value.length), Number(offset + value.length))\r\n\t\t}, 0)\r\n\t}\r\n\r\n\treplaceFormulaData(start, end, value) {\r\n\t\tthis.setState((prevState) => ({\r\n\t\t\tformulaValue: prevState.formulaValue.slice(0,start) + value + prevState.formulaValue.slice(end)\r\n\t\t}))\r\n\t\tthis.state.editingBoard.focus()\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.state.editingBoard.setSelectionRange(Number(start + value.length), Number(start + value.length))\r\n\t\t}, 0)\r\n\t}\r\n\r\n\tsetFuncDesc(desc) {\r\n\t\tthis.setState({\r\n\t\t\tfuncDesc: desc\r\n\t\t})\r\n\t}\r\n\r\n\tshowModal() {\r\n\t\tthis.setState({\r\n\t\t\tvisible: true\r\n\t\t});\r\n\t}\r\n\r\n\thandleOk() {\r\n\t\tconst self = this\r\n\r\n\t\tthis.setState({ okLoading: true })\r\n\t\tsetTimeout(() => {\r\n\t\t\tif(this.state.okLoading === true) {\r\n\t\t\t\tthis.setState({ okLoading: false })\r\n\t\t\t\tmessage.error('验证失败') // 网络极慢 or Internal server error\r\n\t\t\t}\r\n\t\t}, 5000)\r\n\r\n\t\tthis.validate({\r\n\t\t\tonSuccess(expr) {\r\n\t\t\t\t//\"expr\":\"STRTOFLOAT(本表单.{EA2846C8-F3AC-AC6E-223A-B40EF0F22633})+STRTOFLOAT(本表单.{1E54AA87-8977-06C0-A965-0D60651DA0A0})\"\r\n\t\t\t\tself.props.formulaData.receiver(self.state.formulaValue, expr)\r\n\t\t\t\tself.props.formulaData.cancel()\r\n\t\t\t},\r\n\t\t\tonFail(msg) {\r\n\t\t\t\tnotification.error({\r\n\t\t\t\t\tmessage: '验证失败',\r\n\t\t\t\t\tdescription: msg,\r\n\t\t\t\t\tduration: 5\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\thandleValidation() {\r\n\t\tthis.setState({ validateLoading: true })\r\n\t\tsetTimeout(() => {\r\n\t\t\tif(this.state.validateLoading === true) {\r\n\t\t\t\tthis.setState({ validateLoading: false })\r\n\t\t\t\tmessage.error('验证失败') // 网络极慢 or Internal server error\r\n\t\t\t}\r\n\t\t}, 5000)\r\n\r\n\t\tthis.validate({\r\n\t\t\tonSuccess() {\r\n\t\t\t\tmessage.success('验证通过')\r\n\t\t\t},\r\n\t\t\tonFail(msg) {\r\n\t\t\t\tnotification.error({\r\n\t\t\t\t\tmessage: '验证失败',\r\n\t\t\t\t\tdescription: msg,\r\n\t\t\t\t\tduration: null\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tvalidate(opts) {\r\n\r\n\t\t$.post('/general/appbuilder/web/appdesign/appform/checkfunc',\r\n\t\t\t{\r\n\t\t\t\tformId: this.props.formulaData.formId,\r\n\t\t\t\tlogic: this.props.formulaData.logic || false,\r\n\t\t\t\texpr: this.state.formulaValue\r\n\t\t\t},\r\n\t\t\t(response) => {\r\n\t\t\t\tthis.setState({ validateLoading: false, okLoading: false })\r\n\r\n\t\t\t\tif(response.status === 'ok') {\r\n\t\t\t\t\tif(response.data.result === false) {\r\n\t\t\t\t\t\topts.onFail && opts.onFail(response.data.info)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet expr = response.data.expr ? response.data.expr : ''\r\n\t\t\t\t\t\topts.onSuccess && opts.onSuccess(expr)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\thandleCancel(e) {\r\n\t\tthis.props.formulaData.cancel()\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t<div>\r\n\t\t\t<Modal title=\"编辑公式\"\r\n\t\t\t\twidth={1100} bodyStyle={{width:1100,height:480,overflow:'auto'}} style={{top:4}}\r\n\t\t\t\tclassName=\"formula-edit-modal thin-scroll\"\r\n\t\t\t\tvisible={this.state.visible}\r\n\t\t\t\tonOk={this.handleOk.bind(this)}\r\n\t\t\t\tonCancel={this.handleCancel.bind(this)}\r\n\t\t\t\tfooter={[\r\n\t\t\t\t\t<Button key=\"back\" type=\"ghost\" size=\"large\" onClick={this.handleCancel.bind(this)}>取 消</Button>,\r\n          <Button key=\"test\" type=\"ghost\" size=\"large\" loading={this.state.validateLoading} onClick={this.handleValidation.bind(this)}>验 证</Button>,\r\n          <Button key=\"submit\" type=\"primary\" size=\"large\" loading={this.state.okLoading} onClick={this.handleOk.bind(this)}>提 交</Button>\r\n        ]}\r\n\t\t\t>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col span=\"4\">\r\n\t\t\t\t\t\t<FormulaField formulaData={this.props.formulaData} changeFormulaData={this.changeFormulaData.bind(this)} />\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span=\"14\" className=\"formula-modal-edit-wrap\">\r\n\t\t\t\t\t\t<FormulaEdit\r\n\t\t\t\t\t\t\tvalue={this.state.formulaValue}\r\n\t\t\t\t\t\t\tsetEditingBoard={this.setEditingBoard.bind(this)}\r\n\t\t\t\t\t\t\tsetFormula={this.setFormula.bind(this)} />\r\n\t\t\t\t\t\t<FormulaOprator changeFormulaData={this.changeFormulaData.bind(this)} />\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span=\"6\">\r\n\t\t\t\t\t\t<FunctionList\r\n\t\t\t\t\t\t\tfuncDesc={this.state.funcDesc}\r\n\t\t\t\t\t\t\tsetFuncDesc={this.setFuncDesc.bind(this)}\r\n\t\t\t\t\t\t\tchangeFormulaData={this.changeFormulaData.bind(this)}\r\n\t\t\t\t\t \t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n/*\r\nFormula.propTypes = {\r\n\tformulaData: React.PropTypes.shape({\r\n\t\tvalue: React.PropTypes.string.isRequired,\r\n\t\tformId: React.PropTypes.string.isRequired,\r\n\t\tforms: React.PropTypes.string.isRequired,\r\n\t\tlogic: React.PropTypes.bool.isRequired,\r\n\t\treceiver: React.PropTypes.func.isRequired,\r\n\t\tcancel: React.PropTypes.func.isRequired\r\n\t})\r\n}\r\n*/\r\n\r\nexport default Formula\r\n"],"sourceRoot":""}