{"version":3,"sources":["components/ListHeaderProps.js","components/ListProps.js"],"names":["ListHeaderProps","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","owner","state","visible","excelRef","React","createRef","_this2","getWorkbook","excel","current","cellSettings","getSettings","maxCols","maxRows","isEmptyRow","isEmptyCol","mergeCells","getPlugin","mergedCellsCollection","mergedCells","map","merge","removed","push","row","col","rowspan","colspan","obj_defs","max_level","updateSettings","viewportRowRenderingOffset","viewportColumnRenderingOffset","arr_columns","i_level","cell","getCell","pos","getCoords","value","getDataAtCell","meta","getCellMeta","name","style","def","styleName","columns","width","getColWidth","handleCancel","window","setTimeout","setSubFieldLayout","_this3","setState","listHeaderPropsShowFlag","react_default","a","createElement","modal","title","onOk","handleOk","bind","onCancel","footer","es_button","key","type","size","onClick","top","maskClosable","height","overflow","td_excel","ref","single","items","me","_me$props","level","subFields","col_widths","field","layout","setDataAtCell","length","setCellMetaObject","colWidths","prev_col","prev_value","Component","ListProps","ischanged","exprShowFlag","outLinkShowFlag","desc","defaultType","defaultValue","required","noDup","readonly","hidden","asTitle","isSearch","link","defaultRows","headLevel","autoSize","objectSpread","comfirmControlProp","assertThisInitialized","sysCurCellMeta","_this$setState","defineProperty","item","theControl","allControlles","filter","control","label","index","curSubField","curSubFieldIndex","confirm","index2","obj_def","_this4","_this5","commonControllesIndex","commonControlles","allControllesIndex","menu","keys","columnsOfForm","parent_list","es_menu","addSubField","Item","formId","className","placeholder","onChange","e","setControlProp","target","es_select","Option","dropdown","overlay","ListHeaderProps_ListHeaderProps","id","fieldIndex","setSubField","deleteSubField","icon","checked","makeListSortable","prevProps","prevState","$","sortable","axis","stop","event","ui","newSubFields","each","attr","disableSelection"],"mappings":"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","file":"static/js/25.afbf994c.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Modal, Button} from 'antd';\r\nimport TdExcel from '../td-excel';\r\n\r\nexport default class ListHeaderProps extends Component{\r\n\t\tconstructor(props) {\r\n\t\t\t\tsuper(props);\r\n\t\t\t\tthis.owner = this.props.owner;\r\n\t\t\t\tthis.state = {\r\n\t\t\t\t\tvisible: true\r\n\t\t\t\t}\r\n\t\t\t\tthis.excelRef = React.createRef();\r\n\t\t}\r\n\t\t\r\n\t\thandleOk(){\r\n\t\t\t\tthis.getWorkbook();\r\n\t\t\t\tlet excel = this.excelRef.current.excel\t\t\t\t\r\n\t\t\t\tlet cellSettings = excel.getSettings();\r\n\t\t\t\tlet maxCols = cellSettings[\"maxCols\"], maxRows = cellSettings[\"maxRows\"];\r\n        while(maxRows > 0){\r\n        \t\tif(excel.isEmptyRow(maxRows - 1)){\r\n        \t\t\t\t--maxRows;\r\n        \t\t}else{\r\n        \t\t\t\tbreak;\r\n        \t\t}\r\n        }\r\n        while(maxCols > 0){\r\n        \t\tif(excel.isEmptyCol(maxCols - 1)){\r\n        \t\t\t\t--maxCols;\r\n        \t\t}else{\r\n        \t\t\t\tbreak;\r\n        \t\t}\r\n        }\r\n\t\t\t\t//保存合并项\r\n        let mergeCells = [];\r\n        excel.getPlugin(\"mergeCells\").mergedCellsCollection.mergedCells.map(merge => {\r\n        \t\tif(!merge.removed){\r\n        \t\t\t\tmergeCells.push({row: merge.row, col: merge.col, rowspan: merge.rowspan, colspan: merge.colspan});\r\n        \t\t}\r\n        });        \r\n        let obj_defs = {}, max_level = 1;\r\n        excel.updateSettings({viewportRowRenderingOffset: maxRows, viewportColumnRenderingOffset: maxCols, mergeCells: mergeCells});\r\n        for(let col=0; col < maxCols; col++){\r\n\t\t\t\t\t\tlet arr_columns = [], i_level = 0;\r\n        \t\tfor(let row=0; row < maxRows; row++){\r\n        \t\t\t\tlet cell = excel.getCell(row, col);\r\n        \t\t\t\tlet pos = excel.getCoords(cell);\r\n        \t\t\t\tlet value = excel.getDataAtCell(pos.row, pos.col);\r\n        \t\t\t\tif(value === null) value = '';\r\n        \t\t\t\tif(row === pos.row && value !== \"\"){\r\n        \t\t\t\t\t\ti_level++;\r\n        \t\t\t\t\t\tlet meta = excel.getCellMeta(pos.row, pos.col);\r\n        \t\t\t\t\t\tarr_columns.push({name: value, style: meta.def.styleName});\r\n        \t\t\t\t}\r\n        \t\t\t\tif(value !== \"\" && pos.col === col && row === (maxRows - 1)){\r\n        \t\t\t\t\t\tobj_defs[value] = {columns: arr_columns, width: excel.getColWidth(col)};\r\n        \t\t\t\t\t\tif(max_level < i_level){\r\n        \t\t\t\t\t\t\t\tmax_level = i_level;\r\n        \t\t\t\t\t\t}\r\n        \t\t\t\t}\r\n        \t\t}\r\n        }\r\n\t\t\t\tthis.handleCancel();\r\n        window.setTimeout(()=>this.owner.setSubFieldLayout(obj_defs, max_level), 0);\t\t\t\t\r\n\t\t}\r\n\r\n\t\thandleCancel(){\r\n\t\t\t\twindow.setTimeout(()=>this.owner.setState({listHeaderPropsShowFlag: false}), 0);\r\n\t\t}\r\n\r\n\t\trender(){\r\n\t\t\t\treturn (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Modal title=\"设计列表头\" visible={this.state.visible} onOk={this.handleOk.bind(this)} onCancel={this.handleCancel.bind(this)} footer={[\r\n\t\t\t\t\t\t\t\t\t\t<Button key=\"back\" type=\"ghost\" size=\"large\" onClick={this.handleCancel.bind(this)}>取 消</Button>,\r\n          \t\t\t\t\t<Button key=\"submit\" type=\"primary\" size=\"large\" onClick={this.handleOk.bind(this)}>提 交</Button>\r\n        \t\t\t\t]} width=\"915px\" style={{top: '20px'}} maskClosable={false}>\r\n        \t\t\t\t\t\t<div style={{height: '400px', overflow: 'hidden'}}>\r\n        \t\t\t\t\t\t\t\t<TdExcel ref={this.excelRef} single={true} owner={this} items={this.props.items}/>\r\n        \t\t\t\t\t\t</div>\r\n        \t\t\t\t</Modal>\r\n\t\t\t\t\t\t</div>)\r\n\t\t}\r\n\r\n\t\tcomponentDidMount() {\r\n\t\t\t\tlet me = this;\r\n\t\t\t\twindow.setTimeout(()=>{\r\n\t\t\t\t\t\tlet {level, subFields} = me.props;\r\n\t\t\t\t\t\tlet excel = me.excelRef.current.excel;\r\n\r\n\t\t\t\t\t\tif(subFields){\r\n\t\t\t\t\t\t\t\tlet col_widths = [];\r\n\t\t\t\t\t\t\t\tlet mergeCells = [];\r\n\t\t\t\t\t\t\t\tsubFields.map((field, col) => {\r\n\t\t\t\t\t\t\t\t\t\tif(!field.layout){\r\n\t\t\t\t\t\t\t\t\t\t\t\tfield.layout = {columns: []};\r\n\t\t\t\t\t\t\t\t\t\t\t\tfield.layout.columns.push({name: field.title});\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tif(field.layout){\r\n\t\t\t\t\t\t\t\t\t\t\t\tif(field.layout.width){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcol_widths.push(field.layout.width);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tfield.layout.columns.map((layout, row) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\texcel.setDataAtCell(row, col, row === (field.layout.columns.length - 1) ? field.title : layout.name);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(layout.style){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet meta = excel.getCellMeta(row, col);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!meta.def){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmeta.def = {};\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmeta.def[\"styleName\"] = layout.style;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\texcel.setCellMetaObject(row, col, meta);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tif(col_widths.length > 0){\r\n\t\t\t\t\t\t\t\t\t\texcel.updateSettings({colWidths: col_widths});\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tfor(let row = 0; row < level; row++){\r\n\t\t\t\t\t\t\t\t\t\tlet prev_col = 0, prev_value = \"\", col = 0;\r\n\t\t\t\t\t\t\t\t\t\twhile(col < subFields.length){\r\n\t\t\t\t\t\t\t\t\t\t\t\tlet value = excel.getDataAtCell(row, col);\r\n\t\t\t\t\t\t\t\t\t\t\t\tif(value === null) value = '';\r\n\t\t\t\t\t\t\t\t\t\t\t\tif(prev_value !== \"\" && prev_value !== value){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//excel.getPlugin(\"MergeCells\").merge(row, prev_col, row, col - 1);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmergeCells.push({row, col: prev_col, rowspan: 1, colspan: col - prev_col});\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprev_value = \"\";\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tif(prev_value === \"\"){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprev_value = value;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprev_col = col;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcol++;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tif(prev_value !== ''){\r\n\t\t\t\t\t\t\t\t\t\t\t\tmergeCells.push({row, col: prev_col, rowspan: 1, colspan: col - prev_col});\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tfor(let col = 0; col < subFields.length; col++){\r\n\t\t\t\t\t\t\t\t\t\tfor(let row = level - 1; row >= 0; row--){\r\n\t\t\t\t\t\t\t\t\t\t\t\tlet value = excel.getDataAtCell(row, col);\r\n\t\t\t\t\t\t\t\t\t\t\t\tif(value === null) value = '';\r\n\t\t\t\t\t\t\t\t\t\t\t\tif(value !== \"\"){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(row < level - 1){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//excel.getPlugin(\"MergeCells\").merge(row, col, level - 1, col);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmergeCells.push({row, col, rowspan: level - row, colspan: 1});\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif(mergeCells.length > 0){\r\n\t\t\t\t\t\t\t\t\t\texcel.updateSettings({mergeCells});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t}, 50);\r\n\t\t}\r\n}","import React, { Component } from 'react';\r\nimport {Select, Button, Menu, Dropdown, Icon} from 'antd';\r\nimport {commonControlles, allControlles} from '../Controlles';\r\nimport Formula from './formula';\r\nimport Outlink from './outlink';\r\nimport ListHeaderProps from './ListHeaderProps.js';\r\nimport './list.css';\r\nimport $ from 'jquery';\r\nimport \"jquery-ui/ui/widgets/sortable.js\";\r\n\r\nclass ListProps extends Component {\r\n\t\tconstructor(props) {\r\n\t\t\t\tsuper(props);\r\n\t\t\t\tthis.owner = this.props.owner;\r\n\t\t\t\t\r\n\t\t\t\tthis.state = {\r\n\t\t\t\t\t\tischanged: false,\r\n\t\t\t\t\t\texprShowFlag: false,\r\n\t\t\t\t\t\toutLinkShowFlag: false,\r\n\t\t\t\t\t\tlistHeaderPropsShowFlag: false,\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t  \"name\": \"\",//标识符，数据存储字段名，可为空\r\n\t\t\t\t\t  \"title\": \"列表\",//标题，不为空\r\n\t\t\t\t\t  \"desc\": \"\",//描述，可为空\r\n\t\t\t\t\t  \"defaultType\": \"custom\",//默认值，可选值为custom、expr、outlink\r\n\t\t\t\t\t  \"defaultValue\": \"\",\r\n\t\t\t\t\t  \"required\": false,//必填标识\r\n\t\t\t\t\t  \"noDup\": false,//不可重复标识\r\n\t\t\t\t\t  \"readonly\":false,//只读标识\r\n\t\t\t\t\t  \"hidden\":false,//隐藏标识\r\n\t\t\t\t\t  \"asTitle\":false,//作为单据标题标识\r\n\t\t\t\t\t  \"isSearch\": false,//查询字段\r\n\t\t\t\t\t  \"link\":\"\",//超链接地址\r\n\t\t\t\t\t  \"type\": \"list\",\r\n\t\t\t\t\t  \"subFields\": [],\r\n\t\t\t\t\t  \"defaultRows\": 1,\r\n\t\t\t\t\t  \"headLevel\": 1,\r\n\t\t\t\t\t  \"autoSize\": false//自动行高\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.state = {...this.state, ...this.props.def};\r\n\t\t\t\t\r\n\t\t\t\tthis.owner.comfirmControlProp = this.comfirmControlProp.bind(this);\t\r\n\t\t}\t\r\n\t\t\r\n\t\tcomfirmControlProp(){\r\n\t\t\t\tif(this.state.ischanged){\r\n\t\t\t\t\t\tthis.setState({ischanged: false});\r\n\t\t\t\t\t\tlet state = {...this.state};\r\n\t\t\t\t\t\tdelete state[\"ischanged\"];\r\n\t\t\t\t\t\tdelete state[\"exprShowFlag\"];\r\n\t\t\t\t\t\tdelete state[\"outLinkShowFlag\"];\r\n\t\t\t\t\t\tdelete state[\"listHeaderPropsShowFlag\"];\r\n\t\t\t\t\t\tthis.owner.sysCurCellMeta(state);\r\n\t\t\t\t}\t\t\t\t\r\n\t\t}\t\t\t\r\n\t\t\r\n\t\tsetControlProp(key, value){\r\n\t\t\t\tif(key === \"title\"){\r\n\t\t\t\t\t\tthis.setState({[key]: value, name: value});\r\n\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.setState({[key]: value});\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState({ischanged: true});\r\n\t\t}\r\n\t\t\r\n\t\taddSubField(item){\r\n\t\t\t\tlet {subFields} = this.state;\r\n\t\t\t\tlet theControl = allControlles.filter(control=>control.name===item.key);\r\n\t\t\t\tsubFields.push({title: theControl[0].label, type: item.key});\r\n\t\t\t\tthis.setState({subFields});\r\n\t\t\t\twindow.setTimeout(()=>{\r\n\t\t\t\t\t\tlet state = {...this.state};\r\n\t\t\t\t\t\tdelete state[\"ischanged\"];\r\n\t\t\t\t\t\tdelete state[\"exprShowFlag\"];\r\n\t\t\t\t\t\tdelete state[\"outLinkShowFlag\"];\r\n\t\t\t\t\t\tdelete state[\"listHeaderPropsShowFlag\"];\r\n\t\t\t\t\t\tthis.owner.sysCurCellMeta(state);\t\t\t\t\t\t\r\n\t\t\t\t\t\t}, 0);\r\n\t\t}\r\n\t\t\r\n\t\tsetSubField(field, index){\r\n\t\t\t\tthis.owner.setState({curSubField: field, curSubFieldIndex: index});\t\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tdeleteSubField(index){\r\n\t\t\t\tif(window.confirm('确定要删除该字段吗？')){\r\n\t\t\t\t\t\tlet {subFields} = this.state;\r\n\t\t\t\t\t\tif(subFields){\r\n\t\t\t\t\t\t\t\tsubFields = subFields.filter((field, index2) => index !== index2);\r\n\t\t\t\t\t\t\t\tthis.setState({subFields});\r\n\t\t\t\t\t\t\t\twindow.setTimeout(()=>{\r\n\t\t\t\t\t\t\t\t\t\tlet state = {...this.state};\r\n\t\t\t\t\t\t\t\t\t\tdelete state[\"ischanged\"];\r\n\t\t\t\t\t\t\t\t\t\tdelete state[\"exprShowFlag\"];\r\n\t\t\t\t\t\t\t\t\t\tdelete state[\"outLinkShowFlag\"];\r\n\t\t\t\t\t\t\t\t\t\tdelete state[\"listHeaderPropsShowFlag\"];\r\n\t\t\t\t\t\t\t\t\t\tthis.owner.sysCurCellMeta(state);\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t}, 0);\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tsetSubFieldLayout(obj_def, headLevel){\r\n\t\t\t\tlet {subFields} = this.state;\r\n\t\t\t\tif(subFields){\r\n\t\t\t\t\t\tsubFields.map(field => {field[\"layout\"] = obj_def[field[\"title\"]]; field[\"layout\"][\"columns\"][field[\"layout\"][\"columns\"].length - 1][\"name\"] = field['alias'] && field['alias'] !== '' ? field['alias'] : field['title']});\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState({subFields, headLevel});\r\n\t\t\t\twindow.setTimeout(()=>{\r\n\t\t\t\t\t\tlet state = {...this.state};\r\n\t\t\t\t\t\tdelete state[\"ischanged\"];\r\n\t\t\t\t\t\tdelete state[\"exprShowFlag\"];\r\n\t\t\t\t\t\tdelete state[\"outLinkShowFlag\"];\r\n\t\t\t\t\t\tdelete state[\"listHeaderPropsShowFlag\"];\r\n\t\t\t\t\t\tthis.owner.sysCurCellMeta(state);\t\t\t\t\t\t\r\n\t\t\t\t\t\t}, 0);\r\n\t\t}\r\n\t\t\r\n\t\trender(){\r\n\t\t\t\tlet me = this;\r\n\t\t\t\tlet commonControllesIndex = commonControlles.filter(control => control.name === this.state.type);\r\n\t\t\t  let allControllesIndex = allControlles.filter(control => control.name === this.state.type);\r\n\t\t\t  let columns = Object.keys(this.props.columnsOfForm).map(key=> this.props.columnsOfForm[key]);\r\n\t\t\t  let {parent_list} = this.props;\r\n\t\t\t  const menu = (\r\n\t\t\t\t  <Menu onClick={this.addSubField.bind(this)}>\r\n\t\t\t\t  \t{\r\n\t\t\t\t    \t\tallControlles.map(control => control.name != \"autoNumber\" && control.name != \"list\"  && control.name != \"signature\" && \r\n\t\t\t\t    \t\t\t\t<Menu.Item key={control.name}>\r\n\t\t\t\t    \t\t\t\t\t\t{control.label}\r\n\t\t\t\t    \t\t\t\t</Menu.Item>\r\n\t\t\t\t    \t\t)\r\n\t\t\t\t    }\r\n\t\t\t\t  </Menu>\r\n\t\t\t\t);\r\n\t\t\t\t\r\n\t\t\t\tconst data = {\r\n\t\t\t\t\t\tvalue: this.state.defaultValue,\r\n\t\t\t\t\t\tformId: this.props.formId,\r\n\t\t\t\t\t\tforms: '',\r\n\t\t\t\t\t\tlogic: false,\r\n\t\t\t\t\t\treceiver(expr) {\r\n\t\t\t\t\t\t\t\tme.setState({defaultValue: expr, exprShowFlag: false});\r\n\t\t\t\t\t\t\t\twindow.setTimeout(()=>{\r\n\t\t\t\t\t\t\t\t\t\tlet state = {...me.state};\r\n\t\t\t\t\t\t\t\t\t\tdelete state[\"exprShowFlag\"];\r\n\t\t\t\t\t\t\t\t\t\tdelete state[\"outLinkShowFlag\"];\r\n\t\t\t\t\t\t\t\t\t\tme.props.sysCurCellMeta(state);\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t}, 0);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tcancel() {\r\n\t\t\t\t\t\t\t\tme.setState({exprShowFlag: false});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className=\"config-panel list-panel \">\r\n\t\t\t \t\t\t\t\t<div className=\"ant-row ant-form-item\">\r\n\t\t\t            <div className=\"ant-form-item-label\">\r\n\t\t\t              <label>名称</label>\r\n\t\t\t            </div>\r\n\t\t\t            <div className=\"ant-form-item-control has-success\">\r\n\t\t\t              <span className=\"ant-input-wrapper\">\r\n\t\t\t              <input type=\"text\" placeholder=\"请输入控件名称\" className=\"config-text-len ant-input\" value={this.state.title} onChange={e => this.setControlProp('title', e.target.value)}/>\r\n\t\t\t              </span>\r\n\t\t\t            </div>\r\n\t\t\t          </div>\r\n\t\t\t          <div className=\"ant-row ant-form-item\">\r\n\t\t\t            <div className=\"ant-form-item-label\">\r\n\t\t\t              <label>控件类型</label>\r\n\t\t\t              <span className=\"ant-input-wrapper config-typename\">\r\n\t\t\t              \t\t{\r\n\t\t\t              \t\t\t\tcommonControllesIndex && commonControllesIndex.length > 0  ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select value={[this.state.type]} onChange={value => this.setControlProp('type', value)} size=\"small\" style={{\"width\":\"120px\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcommonControlles.map(control => <Select.Option value={control.name} key={control.name}>{control.label}</Select.Option>)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Select> :\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"ant-input-wrapper config-typename\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{allControllesIndex[0][\"label\"]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t              </span>\r\n\t\t\t            </div>\r\n\t\t\t          </div>\r\n\t\t\t          <div className=\"ant-row ant-form-item\">\r\n\t\t\t            <div className=\"ant-form-item-label\">\r\n\t\t\t              <label>描述</label>\r\n\t\t\t            </div>\r\n\t\t\t            <div className=\"ant-form-item-control has-success\">\r\n\t\t\t              <span className=\"ant-input-wrapper\">\r\n\t\t\t                <textarea type=\"textarea\" placeholder=\"请输入控件描述\" className=\"config-text-desc ant-input\" value={this.state.desc} onChange={e => this.setControlProp('desc', e.target.value)}></textarea>\r\n\t\t\t              </span>\r\n\t\t\t            </div>\r\n\t\t\t          </div>\r\n\t\t\t          <div className=\"ant-row ant-form-item\">\r\n\t\t\t            <div className=\"ant-form-item-label\">\r\n\t\t\t              <label>字段</label>\r\n\t\t\t            </div>\r\n\t\t\t            <div className=\"ant-form-item-control has-success\">\r\n\t\t\t              <Dropdown overlay={menu}>\r\n\t\t\t              \t\t<Button>添加字段</Button>\r\n\t\t\t              </Dropdown>\r\n\t\t\t              <Button onClick={() => this.setState({listHeaderPropsShowFlag: true})}>设计表头</Button>\r\n\t\t\t              {\r\n\t\t\t              \t\tthis.state.listHeaderPropsShowFlag ? <ListHeaderProps owner={this} level={this.state.headLevel} subFields={this.state.subFields}  items={this.props.columnsOfForm}/> : null\r\n\t\t\t              }\t\t\t\t                \t\t\t              \t\t\t            \r\n\t\t\t              <ul className=\"sub-fields\" id=\"sortable\">\r\n\t\t\t              \t{\r\n\t\t\t              \t\t\tthis.state.subFields ? this.state.subFields.map((field,index)=>\r\n\t\t\t              \t\t\t<li key={index} fieldIndex={index}>\r\n\t\t\t                  \t\t\t<p onClick={this.setSubField.bind(this, field, index)}>{field.title}</p>\r\n\t\t\t                  \t\t\t<span className=\"delete\" onClick = {this.deleteSubField.bind(this, index)}><Icon type=\"minus-circle\" /></span>\r\n\t\t\t                \t\t</li>) : null\t\t\t                \t\t\r\n\t\t\t              \t}\r\n\t\t\t              </ul>            \r\n\t\t\t            </div>\r\n\t\t\t          </div>\t\t\t          \r\n\t\t\t          <div className=\"ant-row ant-form-item\">\r\n\t\t\t            <div className=\"ant-form-item-label\">\r\n\t\t\t              <label>默认行数</label>\r\n\t\t\t            </div>\r\n\t\t\t            <div className=\"ant-form-item-control has-success\">\r\n\t\t\t              <span className=\"ant-input-wrapper\">\r\n\t\t\t                <input className=\"ant-input\" value={this.state.defaultRows} onChange={e=>this.setControlProp('defaultRows', e.target.value)}/>\r\n\t\t\t              </span>\r\n\t\t\t            </div>\r\n\t\t\t          </div>\t\t          \r\n\t\t\t          <div className=\"ant-row ant-form-item last-ant-form-item\">\t     \r\n\t\t\t          \t<div className=\"ant-form-item-control has-success\">\r\n\t\t\t              <label className=\"ant-checkbox-wrapper\">\r\n\t\t\t                  <input type=\"checkbox\" className=\"config-text-readonly\" checked={this.state.readonly} onChange={e => this.setControlProp('readonly', e.target.checked)}/>\r\n\t\t\t                <span>只读</span>\r\n\t\t\t              </label>\r\n\t\t\t            </div>    \r\n\t\t\t            <div className=\"ant-form-item-control has-success\">\r\n\t\t\t              <label className=\"ant-checkbox-wrapper\">\r\n\t\t\t                  <input type=\"checkbox\" className=\"config-text-hidden\" checked={this.state.hidden} onChange={e => this.setControlProp('hidden', e.target.checked)}/>\r\n\t\t\t                <span>隐藏</span>\r\n\t\t\t              </label>\r\n\t\t\t            </div>\r\n\t\t\t            {0?\r\n\t\t\t            <div className=\"ant-form-item-control has-success\">\r\n\t\t\t              <label className=\"ant-checkbox-wrapper\">\r\n\t\t\t                  <input type=\"checkbox\" className=\"config-text-autosize\" checked={this.state.autoSize} onChange={e => this.setControlProp('autoSize', e.target.checked)}/>\r\n\t\t\t                <span>自动行高</span>\r\n\t\t\t              </label>\r\n\t\t\t            </div>:null}\r\n\t\t\t          </div>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\tcomponentDidMount() {\r\n\t\t\t\tthis.makeListSortable();\r\n\t\t}\r\n\t\t\r\n\t\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\t\t\t//this.makeListSortable();\r\n\t\t}\r\n\t\t\r\n\t\tmakeListSortable() {\r\n        const _this = this;\r\n        $( \"#sortable\" ).sortable({\r\n          axis: \"y\",\r\n          stop: function( event, ui ) {\r\n          \t\tlet {subFields} = _this.state;\r\n          \t\tlet newSubFields = [];\r\n          \t\t$(\"#sortable li\").each(function(){\r\n          \t\t\t\tnewSubFields.push(subFields[$(this).attr('fieldIndex')]);\r\n          \t\t});\r\n          \t\t_this.setState({subFields: null})\r\n          \t\tsubFields = newSubFields;\r\n          \t\t_this.setState({subFields, ischanged: true})\r\n          }\r\n        });\r\n        $( \"#sortable\" ).disableSelection();\r\n      }\r\n}\r\n\r\nexport default ListProps;"],"sourceRoot":""}