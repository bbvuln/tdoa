/*
 * jqGrid extension for constructing Grid Data from external file
 * Tony Tomov tony@trirand.com
 * http://trirand.com/blog/ 
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl-2.0.html
**/ 
//jsHint options
/*global jQuery, $, alert, xmlJsonClass */

"use strict";
;(function($){$.jgrid.extend({jqGridImport:function(o){o=$.extend({imptype:"xml",impstring:"",impurl:"",mtype:"GET",impData:{},xmlGrid:{config:"roots>grid",data:"roots>rows"},jsonGrid:{config:"grid",data:"data"},ajaxOptions:{}},o||{});return this.each(function(){var g=this;var h=function(a,o){var b=$(o.xmlGrid.config,a)[0];var c=$(o.xmlGrid.data,a)[0],jstr,jstr1;if(xmlJsonClass.xml2json&&$.jgrid.parse){jstr=xmlJsonClass.xml2json(b," ");jstr=$.jgrid.parse(jstr);for(var d in jstr){if(jstr.hasOwnProperty(d)){jstr1=jstr[d]}}if(c){var e=jstr.grid.datatype;jstr.grid.datatype='xmlstring';jstr.grid.datastr=a;$(g).jqGrid(jstr1).jqGrid("setGridParam",{datatype:e})}else{$(g).jqGrid(jstr1)}jstr=null;jstr1=null}else{alert("xml2json or parse are not present")}};var i=function(a,o){if(a&&typeof a=='string'){var b=false;if($.jgrid.useJSON){$.jgrid.useJSON=false;b=true}var c=$.jgrid.parse(a);if(b){$.jgrid.useJSON=true}var d=c[o.jsonGrid.config];var e=c[o.jsonGrid.data];if(e){var f=d.datatype;d.datatype='jsonstring';d.datastr=e;$(g).jqGrid(d).jqGrid("setGridParam",{datatype:f})}else{$(g).jqGrid(d)}}};switch(o.imptype){case'xml':$.ajax($.extend({url:o.impurl,type:o.mtype,data:o.impData,dataType:"xml",complete:function(a,b){if(b=='success'){h(a.responseXML,o);$(g).triggerHandler("jqGridImportComplete",[a,o]);if($.isFunction(o.importComplete)){o.importComplete(a)}}a=null}},o.ajaxOptions));break;case'xmlstring':if(o.impstring&&typeof o.impstring=='string'){var j=$.jgrid.stringToDoc(o.impstring);if(j){h(j,o);$(g).triggerHandler("jqGridImportComplete",[j,o]);if($.isFunction(o.importComplete)){o.importComplete(j)}o.impstring=null}j=null}break;case'json':$.ajax($.extend({url:o.impurl,type:o.mtype,data:o.impData,dataType:"json",complete:function(a){try{i(a.responseText,o);$(g).triggerHandler("jqGridImportComplete",[a,o]);if($.isFunction(o.importComplete)){o.importComplete(a)}}catch(ee){}a=null}},o.ajaxOptions));break;case'jsonstring':if(o.impstring&&typeof o.impstring=='string'){i(o.impstring,o);$(g).triggerHandler("jqGridImportComplete",[o.impstring,o]);if($.isFunction(o.importComplete)){o.importComplete(o.impstring)}o.impstring=null}break}})},jqGridExport:function(o){o=$.extend({exptype:"xmlstring",root:"grid",ident:"\t"},o||{});var c=null;this.each(function(){if(!this.grid){return}var a=$.extend(true,{},$(this).jqGrid("getGridParam"));if(a.rownumbers){a.colNames.splice(0,1);a.colModel.splice(0,1)}if(a.multiselect){a.colNames.splice(0,1);a.colModel.splice(0,1)}if(a.subGrid){a.colNames.splice(0,1);a.colModel.splice(0,1)}a.knv=null;if(a.treeGrid){for(var b in a.treeReader){if(a.treeReader.hasOwnProperty(b)){a.colNames.splice(a.colNames.length-1);a.colModel.splice(a.colModel.length-1)}}}switch(o.exptype){case'xmlstring':c="<"+o.root+">"+xmlJsonClass.json2xml(a,o.ident)+"</"+o.root+">";break;case'jsonstring':c="{"+xmlJsonClass.toJson(a,o.root,o.ident,false)+"}";if(a.postData.filters!==undefined){c=c.replace(/filters":"/,'filters":');c=c.replace(/}]}"/,'}]}')}break}});return c},excelExport:function(o){o=$.extend({exptype:"remote",url:null,oper:"oper",tag:"excel",exportOptions:{}},o||{});return this.each(function(){if(!this.grid){return}var a;if(o.exptype=="remote"){var b=$.extend({},this.p.postData);b[o.oper]=o.tag;var c=jQuery.param(b);if(o.url.indexOf("?")!=-1){a=o.url+"&"+c}else{a=o.url+"?"+c}window.location=a}})}})})(jQuery);