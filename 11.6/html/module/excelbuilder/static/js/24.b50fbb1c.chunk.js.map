{"version":3,"sources":["components/ListHeaderProps.js","components/ListProps.js"],"names":["ListHeaderProps","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","owner","state","visible","excelRef","React","createRef","_this2","excel","current","cellSettings","getSettings","maxCols","maxRows","isEmptyRow","isEmptyCol","mergeCells","getPlugin","mergedCellsCollection","mergedCells","map","merge","removed","push","row","col","rowspan","colspan","obj_defs","max_level","updateSettings","viewportRowRenderingOffset","viewportColumnRenderingOffset","arr_columns","i_level","cell","getCell","pos","getCoords","value","getDataAtCell","meta","getCellMeta","name","style","def","styleName","columns","width","getColWidth","handleCancel","window","setTimeout","setSubFieldLayout","_this3","setState","listHeaderPropsShowFlag","react_default","a","createElement","modal","title","onOk","handleOk","bind","onCancel","footer","es_button","key","type","size","onClick","top","maskClosable","height","overflow","td_excel","ref","single","items","sheets","index","cellMetas","charts","images","cellStyles","fieldMaps","activeKey","me","_me$props","level","subFields","col_widths","cell_values","field","layout","length","setCellMetaObject","setDataAtCell","colWidths","prev_col","prev_value","Component","ListProps","ischanged","exprShowFlag","outLinkShowFlag","desc","defaultType","defaultValue","required","noDup","readonly","hidden","asTitle","isSearch","link","defaultRows","headLevel","autoSize","treeNode","hideSeqNumber","defaultPageSize","objectSpread","comfirmControlProp","assertThisInitialized","sysCurCellMeta","_this$setState","defineProperty","item","theControl","allControlles","filter","control","label","curSubField","curSubFieldIndex","confirm","index2","obj_def","_this4","_this5","commonControllesIndex","commonControlles","allControllesIndex","keys","columnsOfForm","menu","parent_list","es_menu","addSubField","Item","formId","className","placeholder","onChange","e","setControlProp","target","es_select","Option","dropdown","overlay","ListHeaderProps_ListHeaderProps","id","fieldIndex","setSubField","deleteSubField","icon","indexOf","checked","makeListSortable","prevProps","prevState","$","sortable","axis","stop","event","ui","newSubFields","each","attr","disableSelection"],"mappings":"0UAIqBA,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQP,EAAKD,MAAMQ,MACxBP,EAAKQ,MAAQ,CACZC,SAAS,GAEVT,EAAKU,SAAWC,IAAMC,YANLZ,0EAab,IAJI,IAAAa,EAAAV,KACJW,EAAQX,KAAKO,SAASK,QAAQD,MAC9BE,EAAeF,EAAMG,cACrBC,EAAUF,EAAY,QAAaG,EAAUH,EAAY,QACnDG,EAAU,GACXL,EAAMM,WAAWD,EAAU,MAC1BA,EAKN,KAAMD,EAAU,GACXJ,EAAMO,WAAWH,EAAU,MAC1BA,EAMN,IAAII,EAAa,GACjBR,EAAMS,UAAU,cAAcC,sBAAsBC,YAAYC,IAAI,SAAAC,GAC9DA,EAAMC,SACRN,EAAWO,KAAK,CAACC,IAAKH,EAAMG,IAAKC,IAAKJ,EAAMI,IAAKC,QAASL,EAAMK,QAASC,QAASN,EAAMM,YAG5F,IAAIC,EAAW,GAAIC,EAAY,EAC/BrB,EAAMsB,eAAe,CAACC,2BAA4BlB,EAASmB,8BAA+BpB,EAASI,WAAYA,IAC/G,IAAI,IAAIS,EAAI,EAAGA,EAAMb,EAASa,IAE5B,IADJ,IAAIQ,EAAc,GAAIC,EAAU,EACpBV,EAAI,EAAGA,EAAMX,EAASW,IAAM,CAClC,IAAIW,EAAO3B,EAAM4B,QAAQZ,EAAKC,GAC1BY,EAAM7B,EAAM8B,UAAUH,GACtBI,EAAQ/B,EAAMgC,cAAcH,EAAIb,IAAKa,EAAIZ,KAE7C,GADa,OAAVc,IAAgBA,EAAQ,IACxBf,IAAQa,EAAIb,KAAiB,KAAVe,EAAa,CACjCL,IACA,IAAIO,EAAOjC,EAAMkC,YAAYL,EAAIb,IAAKa,EAAIZ,KAC1CQ,EAAYV,KAAK,CAACoB,KAAMJ,EAAOK,MAAOH,EAAKI,KAAOJ,EAAKI,IAAIC,UAAYL,EAAKI,IAAIC,UAAY,KAEjF,KAAVP,GAAgBF,EAAIZ,MAAQA,GAAOD,IAASX,EAAU,IACvDe,EAASW,GAAS,CAACQ,QAASd,EAAae,MAAOxC,EAAMyC,YAAYxB,IAC/DI,EAAYK,IACbL,EAAYK,IAKxBrC,KAAKqD,eACDC,OAAOC,WAAW,kBAAI7C,EAAKN,MAAMoD,kBAAkBzB,EAAUC,IAAY,0CAGjE,IAAAyB,EAAAzD,KACZsD,OAAOC,WAAW,kBAAIE,EAAKrD,MAAMsD,SAAS,CAACC,yBAAyB,KAAS,oCAK7E,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAAC,EAAA,GAAOC,MAAM,iCAAQ1D,QAASN,KAAKK,MAAMC,QAAS2D,KAAMjE,KAAKkE,SAASC,KAAKnE,MAAOoE,SAAUpE,KAAKqD,aAAac,KAAKnE,MAAOqE,OAAQ,CAChIT,EAAAC,EAAAC,cAAAQ,EAAA,GAAQC,IAAI,OAAOC,KAAK,QAAQC,KAAK,QAAQC,QAAS1E,KAAKqD,aAAac,KAAKnE,OAA7E,iBACK4D,EAAAC,EAAAC,cAAAQ,EAAA,GAAQC,IAAI,SAASC,KAAK,UAAUC,KAAK,QAAQC,QAAS1E,KAAKkE,SAASC,KAAKnE,OAA7E,kBACAmD,MAAM,QAAQJ,MAAO,CAAC4B,IAAK,QAASC,cAAc,GACnDhB,EAAAC,EAAAC,cAAA,OAAKf,MAAO,CAAC8B,OAAQ,QAASC,SAAU,WAC3ClB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAASC,IAAKhF,KAAKO,SAAU0E,QAAQ,EAAM7E,MAAOJ,KAAMkF,MAAOlF,KAAKJ,MAAMsF,MAAOC,OAR3E,CAAC,CAACC,MAAO,IAAKtC,KAAM,sBAAQjC,aAAc,GAAIwE,UAAW,GAAIC,OAAQ,GAAIC,OAAQ,GAAIC,WAAY,GAAIC,UAAW,KAQrBC,UARuC,qDAe/I,IAAIC,EAAK3F,KACTsD,OAAOC,WAAW,WAAI,IAAAqC,EACKD,EAAG/F,MAAvBiG,EADeD,EACfC,MAAOC,EADQF,EACRE,UACRnF,EAAQgF,EAAGpF,SAASK,QAAQD,MAGhC,GAFAA,EAAMsB,eAAe,CAAClB,QAAS,MAE5B+E,EAAU,CACX,IAAIC,EAAa,GACb5E,EAAa,GACb6E,EAAc,GAClBF,EAAUvE,IAAI,SAAC0E,EAAOrE,GAChBqE,EAAMC,SACRD,EAAMC,OAAS,CAAChD,QAAS,IACzB+C,EAAMC,OAAOhD,QAAQxB,KAAK,CAACoB,KAAMmD,EAAMjC,SAEtCiC,EAAMC,SACJD,EAAMC,OAAO/C,OACd4C,EAAWrE,KAAKuE,EAAMC,OAAO/C,OAE/B8C,EAAMC,OAAOhD,QAAQ3B,IAAI,SAAC2E,EAAQvE,GAGhC,GADAqE,EAAYtE,KAAK,CAACC,EAAKC,EAAKD,IAASsE,EAAMC,OAAOhD,QAAQiD,OAAS,EAAKF,EAAMjC,MAAQkC,EAAOpD,OAC1FoD,EAAOnD,MAAM,CACd,IAAIH,EAAOjC,EAAMkC,YAAYlB,EAAKC,GAC9BgB,EAAKI,MACPJ,EAAKI,IAAM,IAEbJ,EAAKI,IAAL,UAAwBkD,EAAOnD,MAC/BpC,EAAMyF,kBAAkBzE,EAAKC,EAAKgB,SAKvCoD,EAAYG,OAAS,GACvBxF,EAAM0F,cAAcL,GAElBD,EAAWI,OAAS,GACrBxF,EAAMsB,eAAe,CAACqE,UAAWP,IAGnC,IAAI,IAAIpE,EAAM,EAAGA,EAAMkE,EAAOlE,IAAM,CAElC,IADA,IAAI4E,EAAW,EAAGC,EAAa,GAAI5E,EAAM,EACnCA,EAAMkE,EAAUK,QAAO,CAC3B,IAAIzD,EAAQ/B,EAAMgC,cAAchB,EAAKC,GACxB,OAAVc,IAAgBA,EAAQ,IACT,KAAf8D,GAAqBA,IAAe9D,IAErCvB,EAAWO,KAAK,CAACC,MAAKC,IAAK2E,EAAU1E,QAAS,EAAGC,QAASF,EAAM2E,IAChEC,EAAa,IAEG,KAAfA,IACDA,EAAa9D,EACb6D,EAAW3E,GAEbA,IAEgB,KAAf4E,GACDrF,EAAWO,KAAK,CAACC,MAAKC,IAAK2E,EAAU1E,QAAS,EAAGC,QAASF,EAAM2E,IAIpE,IAAI,IAAI3E,EAAM,EAAGA,EAAMkE,EAAUK,OAAQvE,IACvC,IAAI,IAAID,EAAMkE,EAAQ,EAAGlE,GAAO,EAAGA,IAAM,CACvC,IAAIe,EAAQ/B,EAAMgC,cAAchB,EAAKC,GAErC,GADa,OAAVc,IAAgBA,EAAQ,IACd,KAAVA,EAAa,CACXf,EAAMkE,EAAQ,GAEf1E,EAAWO,KAAK,CAACC,MAAKC,MAAKC,QAASgE,EAAQlE,EAAKG,QAAS,IAE5D,OAKHX,EAAWgF,OAAS,GACrBxF,EAAMsB,eAAe,CAACd,iBAGzB,WAhKsCsF,sCCMvCC,sBACJ,SAAAA,EAAY9G,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0G,IACjB7G,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4G,GAAAvG,KAAAH,KAAMJ,KACDQ,MAAQP,EAAKD,MAAMQ,MAExBP,EAAKQ,MAAQ,CACXsG,WAAW,EACXC,cAAc,EACdC,iBAAiB,EACjBlD,yBAAyB,EAExBb,KAAQ,GACRkB,MAAS,eACT8C,KAAQ,GACRC,YAAe,SACfC,aAAgB,GAChBC,UAAY,EACZC,OAAS,EACTC,UAAW,EACXC,QAAS,EACTC,SAAU,EACVC,UAAY,EACZC,KAAO,GACP/C,KAAQ,OACRsB,UAAa,GACb0B,YAAe,EACfC,UAAa,EACbC,UAAY,EACZC,SAAY,GACZC,eAAiB,EACjBC,gBAAmB,IAGtBhI,EAAKQ,MAALP,OAAAgI,EAAA,EAAAhI,CAAA,GAAiBD,EAAKQ,MAAUR,EAAKD,MAAMoD,KAE3CnD,EAAKO,MAAM2H,mBAAqBlI,EAAKkI,mBAAmB5D,KAAxBrE,OAAAkI,EAAA,EAAAlI,QAAAkI,EAAA,EAAAlI,CAAAD,KAlCfA,oFAsCjB,GAAGG,KAAKK,MAAMsG,UAAU,CACtB3G,KAAK0D,SAAS,CAACiD,WAAW,IAC1B,IAAItG,EAAKP,OAAAgI,EAAA,EAAAhI,CAAA,GAAOE,KAAKK,cACdA,EAAK,iBACLA,EAAK,oBACLA,EAAK,uBACLA,EAAK,wBACZL,KAAKI,MAAM6H,eAAe5H,2CAIfkE,EAAK7B,GACC,IAAAwF,EAAR,UAAR3D,EACDvE,KAAK0D,UAALwE,EAAA,GAAApI,OAAAqI,EAAA,EAAArI,CAAAoI,EAAgB3D,EAAM7B,GAAtB5C,OAAAqI,EAAA,EAAArI,CAAAoI,EAAA,OAAmCxF,GAAnCwF,IAEAlI,KAAK0D,SAAL5D,OAAAqI,EAAA,EAAArI,CAAA,GAAgByE,EAAM7B,IAExB1C,KAAK0D,SAAS,CAACiD,WAAW,wCAGhByB,GAAK,IAAA1H,EAAAV,KACV8F,EAAa9F,KAAKK,MAAlByF,UACDuC,EAAaC,IAAcC,OAAO,SAAAC,GAAO,OAAEA,EAAQ1F,OAAOsF,EAAK7D,MACnEuB,EAAUpE,KAAK,CAACsC,MAAOqE,EAAW,GAAGI,MAAOjE,KAAM4D,EAAK7D,MACvDvE,KAAK0D,SAAS,CAACoC,cACfxC,OAAOC,WAAW,WAChB,IAAIlD,EAAKP,OAAAgI,EAAA,EAAAhI,CAAA,GAAOY,EAAKL,cACdA,EAAK,iBACLA,EAAK,oBACLA,EAAK,uBACLA,EAAK,wBACZK,EAAKN,MAAM6H,eAAe5H,IACvB,uCAGK4F,EAAOb,GACjBpF,KAAKI,MAAMsD,SAAS,CAACgF,YAAazC,EAAO0C,iBAAkBvD,2CAG9CA,GAAM,IAAA3B,EAAAzD,KACnB,GAAGsD,OAAOsF,QAAQ,gEAAc,KACzB9C,EAAa9F,KAAKK,MAAlByF,UACFA,IACDA,EAAYA,EAAUyC,OAAO,SAACtC,EAAO4C,GAAR,OAAmBzD,IAAUyD,IAC1D7I,KAAK0D,SAAS,CAACoC,cACfxC,OAAOC,WAAW,WAChB,IAAIlD,EAAKP,OAAAgI,EAAA,EAAAhI,CAAA,GAAO2D,EAAKpD,cACdA,EAAK,iBACLA,EAAK,oBACLA,EAAK,uBACLA,EAAK,wBACZoD,EAAKrD,MAAM6H,eAAe5H,IACvB,+CAKOyI,EAASrB,GAAU,IAAAsB,EAAA/I,KAC9B8F,EAAa9F,KAAKK,MAAlByF,UACFA,GACFA,EAAUvE,IAAI,SAAA0E,GAAa6C,EAAQ7C,EAAK,SAAYA,EAAK,OAAa6C,EAAQ7C,EAAK,OAAYA,EAAK,OAAL,QAA2BA,EAAK,OAAL,QAA2BE,OAAS,GAA/D,KAA4EF,EAAK,OAAgC,KAAnBA,EAAK,MAAmBA,EAAK,MAAYA,EAAK,SAE5OjG,KAAK0D,SAAS,CAACoC,YAAW2B,cAC1BnE,OAAOC,WAAW,WAChB,IAAIlD,EAAKP,OAAAgI,EAAA,EAAAhI,CAAA,GAAOiJ,EAAK1I,cACdA,EAAK,iBACLA,EAAK,oBACLA,EAAK,uBACLA,EAAK,wBACZ0I,EAAK3I,MAAM6H,eAAe5H,IACvB,oCAGC,IAAA2I,EAAAhJ,KAEFiJ,EAAwBC,IAAiBX,OAAO,SAAAC,GAAO,OAAIA,EAAQ1F,OAASkG,EAAK3I,MAAMmE,OACtF2E,EAAqBb,IAAcC,OAAO,SAAAC,GAAO,OAAIA,EAAQ1F,OAASkG,EAAK3I,MAAMmE,OACjFtB,EAAUpD,OAAOsJ,KAAKpJ,KAAKJ,MAAMyJ,eAAe9H,IAAI,SAAAgD,GAAG,OAAGyE,EAAKpJ,MAAMyJ,cAAc9E,KAEjF+E,GADctJ,KAAKJ,MAApB2J,YAEJ3F,EAAAC,EAAAC,cAAA0F,EAAA,GAAM9E,QAAS1E,KAAKyJ,YAAYtF,KAAKnE,OAEjCsI,IAAc/G,IAAI,SAAAiH,GAAO,MAAoB,cAAhBA,EAAQ1F,MAAwC,QAAhB0F,EAAQ1F,MAAmC,aAAhB0F,EAAQ1F,MAC9Fc,EAAAC,EAAAC,cAAA0F,EAAA,EAAME,KAAN,CAAWnF,IAAKiE,EAAQ1F,MACrB0F,EAAQC,WAQVzI,KAAKK,MAAM2G,aACVhH,KAAKJ,MAAM+J,OAiBrB,OACE/F,EAAAC,EAAAC,cAAA,OAAK8F,UAAU,4BACZhG,EAAAC,EAAAC,cAAA,OAAK8F,UAAU,yBACThG,EAAAC,EAAAC,cAAA,OAAK8F,UAAU,uBACbhG,EAAAC,EAAAC,cAAA,8BAEFF,EAAAC,EAAAC,cAAA,OAAK8F,UAAU,qCACbhG,EAAAC,EAAAC,cAAA,QAAM8F,UAAU,qBAChBhG,EAAAC,EAAAC,cAAA,SAAOU,KAAK,OAAOqF,YAAY,6CAAUD,UAAU,4BAA4BlH,MAAO1C,KAAKK,MAAM2D,MAAO8F,SAAU,SAAAC,GAAC,OAAIf,EAAKgB,eAAe,QAASD,EAAEE,OAAOvH,aAIjKkB,EAAAC,EAAAC,cAAA,OAAK8F,UAAU,yBACbhG,EAAAC,EAAAC,cAAA,OAAK8F,UAAU,uBACbhG,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,QAAM8F,UAAU,qCAEZX,GAAyBA,EAAsB9C,OAAS,EAC/DvC,EAAAC,EAAAC,cAAAoG,EAAA,GAAQxH,MAAO,CAAC1C,KAAKK,MAAMmE,MAAOsF,SAAU,SAAApH,GAAK,OAAIsG,EAAKgB,eAAe,OAAQtH,IAAQ+B,KAAK,QAAQ1B,MAAO,CAACI,MAAQ,UAElH+F,IAAiB3H,IAAI,SAAAiH,GAAO,OAAI5E,EAAAC,EAAAC,cAAAoG,EAAA,EAAQC,OAAR,CAAezH,MAAO8F,EAAQ1F,KAAMyB,IAAKiE,EAAQ1F,MAAO0F,EAAQC,UAGpG7E,EAAAC,EAAAC,cAAA,QAAM8F,UAAU,qCACbT,EAAmB,GAAnB,UAMJvF,EAAAC,EAAAC,cAAA,OAAK8F,UAAU,yBACbhG,EAAAC,EAAAC,cAAA,OAAK8F,UAAU,uBACbhG,EAAAC,EAAAC,cAAA,8BAEFF,EAAAC,EAAAC,cAAA,OAAK8F,UAAU,qCACbhG,EAAAC,EAAAC,cAAA,QAAM8F,UAAU,qBACdhG,EAAAC,EAAAC,cAAA,YAAUU,KAAK,WAAWqF,YAAY,6CAAUD,UAAU,6BAA6BlH,MAAO1C,KAAKK,MAAMyG,KAAMgD,SAAU,SAAAC,GAAC,OAAIf,EAAKgB,eAAe,OAAQD,EAAEE,OAAOvH,aAIzKkB,EAAAC,EAAAC,cAAA,OAAK8F,UAAU,yBACbhG,EAAAC,EAAAC,cAAA,OAAK8F,UAAU,uBACbhG,EAAAC,EAAAC,cAAA,8BAEFF,EAAAC,EAAAC,cAAA,OAAK8F,UAAU,qCACbhG,EAAAC,EAAAC,cAAAsG,EAAA,GAAUC,QAASf,GACjB1F,EAAAC,EAAAC,cAAAQ,EAAA,oCAEFV,EAAAC,EAAAC,cAAAQ,EAAA,GAAQI,QAAS,kBAAMsE,EAAKtF,SAAS,CAACC,yBAAyB,MAA/D,4BAEE3D,KAAKK,MAAMsD,wBAA0BC,EAAAC,EAAAC,cAACwG,EAAD,CAAiBlK,MAAOJ,KAAM6F,MAAO7F,KAAKK,MAAMoH,UAAW3B,UAAW9F,KAAKK,MAAMyF,UAAYZ,MAAOlF,KAAKJ,MAAMyJ,gBAAmB,KAEzKzF,EAAAC,EAAAC,cAAA,MAAI8F,UAAU,aAAaW,GAAG,YAE3BvK,KAAKK,MAAMyF,UAAY9F,KAAKK,MAAMyF,UAAUvE,IAAI,SAAC0E,EAAMb,GAAP,OAChDxB,EAAAC,EAAAC,cAAA,MAAIS,IAAKa,EAAOoF,WAAYpF,GACxBxB,EAAAC,EAAAC,cAAA,KAAGY,QAASsE,EAAKyB,YAAYtG,KAAK6E,EAAM/C,EAAOb,IAASa,EAAMjC,OAC9DJ,EAAAC,EAAAC,cAAA,QAAM8F,UAAU,SAASlF,QAAWsE,EAAK0B,eAAevG,KAAK6E,EAAM5D,IAAQxB,EAAAC,EAAAC,cAAA6G,EAAA,GAAMnG,KAAK,qBAChF,QAKjBZ,EAAAC,EAAAC,cAAA,OAAK8F,UAAU,yBACbhG,EAAAC,EAAAC,cAAA,OAAK8F,UAAU,uBACbhG,EAAAC,EAAAC,cAAA,0CAEFF,EAAAC,EAAAC,cAAA,OAAK8F,UAAU,qCACbhG,EAAAC,EAAAC,cAAA,QAAM8F,UAAU,qBACdhG,EAAAC,EAAAC,cAAA,SAAO8F,UAAU,YAAYlH,MAAO1C,KAAKK,MAAMmH,YAAasC,SAAU,SAAAC,GAAC,OAAEf,EAAKgB,eAAe,cAAeD,EAAEE,OAAOvH,aAI3HkB,EAAAC,EAAAC,cAAA,OAAK8F,UAAU,yBACbhG,EAAAC,EAAAC,cAAA,OAAK8F,UAAU,uBACbhG,EAAAC,EAAAC,cAAA,sDAEFF,EAAAC,EAAAC,cAAA,OAAK8F,UAAU,qCACbhG,EAAAC,EAAAC,cAAA,QAAM8F,UAAU,qBACrBhG,EAAAC,EAAAC,cAAAoG,EAAA,GAAQzF,KAAK,QAAS/B,MAAO,CAAC1C,KAAKK,MAAMwH,iBAAkBgC,YAAY,qBAAMC,SAAU,SAAApH,GAAK,OAAIsG,EAAKgB,eAAe,kBAAmBtH,IAASK,MAAO,CAACI,MAAS,MAC/JS,EAAAC,EAAAC,cAAAoG,EAAA,EAAQC,OAAR,CAAezH,MAAO,IAAK6B,IAAK,GAAI,kBACpCX,EAAAC,EAAAC,cAAAoG,EAAA,EAAQC,OAAR,CAAezH,MAAO,IAAK6B,IAAK,GAAI,kBACpCX,EAAAC,EAAAC,cAAAoG,EAAA,EAAQC,OAAR,CAAezH,MAAO,IAAK6B,IAAK,GAAI,kBACpCX,EAAAC,EAAAC,cAAAoG,EAAA,EAAQC,OAAR,CAAezH,MAAO,IAAK6B,IAAK,GAAI,kBACpCX,EAAAC,EAAAC,cAAAoG,EAAA,EAAQC,OAAR,CAAezH,MAAO,IAAK6B,IAAK,GAAI,kBACpCX,EAAAC,EAAAC,cAAAoG,EAAA,EAAQC,OAAR,CAAezH,MAAO,KAAM6B,IAAK,IAAK,mBACtCX,EAAAC,EAAAC,cAAAoG,EAAA,EAAQC,OAAR,CAAezH,MAAO,KAAM6B,IAAK,IAAK,mBACtCX,EAAAC,EAAAC,cAAAoG,EAAA,EAAQC,OAAR,CAAezH,MAAO,KAAM6B,IAAK,IAAK,mBACtCX,EAAAC,EAAAC,cAAAoG,EAAA,EAAQC,OAAR,CAAezH,MAAO,KAAM6B,IAAK,IAAK,mBACtCX,EAAAC,EAAAC,cAAAoG,EAAA,EAAQC,OAAR,CAAezH,MAAO,MAAO6B,IAAK,KAAM,wBAKzCX,EAAAC,EAAAC,cAAA,OAAK8F,UAAU,yBACbhG,EAAAC,EAAAC,cAAA,OAAK8F,UAAU,uBACbhG,EAAAC,EAAAC,cAAA,oCAEFF,EAAAC,EAAAC,cAAA,OAAK8F,UAAU,qCACbhG,EAAAC,EAAAC,cAAA,QAAM8F,UAAU,qBACdhG,EAAAC,EAAAC,cAAAoG,EAAA,GAAQzF,KAAK,QAAQ/B,MAAO,CAAC1C,KAAKK,MAAMsH,UAAWkC,YAAY,qBAAM9G,MAAO,CAACI,MAAS,KAAM2G,SAAU,SAAApH,GAAK,OAAEsG,EAAKgB,eAAe,WAAYtH,KAC3IkB,EAAAC,EAAAC,cAAAoG,EAAA,EAAQC,OAAR,CAAezH,MAAO,IAAK,IAE7BQ,EAAQ3B,IAAI,SAAA6G,GAAI,OAAkD,IAA9CA,EAAKtF,KAAK8H,QAAQ5B,EAAK3I,MAAM2D,MAAQ,MAA4B,SAAdoE,EAAK5D,MAAmBZ,EAAAC,EAAAC,cAAAoG,EAAA,EAAQC,OAAR,CAAezH,MAAO0F,EAAKmC,IAAKnC,EAAKtF,YAM1Ic,EAAAC,EAAAC,cAAA,OAAK8F,UAAU,4CACdhG,EAAAC,EAAAC,cAAA,OAAK8F,UAAU,qCACZhG,EAAAC,EAAAC,cAAA,SAAO8F,UAAU,wBACbhG,EAAAC,EAAAC,cAAA,SAAOU,KAAK,WAAWoF,UAAU,uBAAuBiB,QAAS7K,KAAKK,MAAM8G,SAAU2C,SAAU,SAAAC,GAAC,OAAIf,EAAKgB,eAAe,WAAYD,EAAEE,OAAOY,YAChJjH,EAAAC,EAAAC,cAAA,8BAGJF,EAAAC,EAAAC,cAAA,OAAK8F,UAAU,qCACbhG,EAAAC,EAAAC,cAAA,SAAO8F,UAAU,wBACbhG,EAAAC,EAAAC,cAAA,SAAOU,KAAK,WAAWoF,UAAU,qBAAqBiB,QAAS7K,KAAKK,MAAM+G,OAAQ0C,SAAU,SAAAC,GAAC,OAAIf,EAAKgB,eAAe,SAAUD,EAAEE,OAAOY,YAC1IjH,EAAAC,EAAAC,cAAA,8BAGJF,EAAAC,EAAAC,cAAA,OAAK8F,UAAU,qCACbhG,EAAAC,EAAAC,cAAA,SAAO8F,UAAU,wBACbhG,EAAAC,EAAAC,cAAA,SAAOU,KAAK,WAAWoF,UAAU,qBAAqBiB,QAAS7K,KAAKK,MAAMuH,cAAekC,SAAU,SAAAC,GAAC,OAAIf,EAAKgB,eAAe,gBAAiBD,EAAEE,OAAOY,YACxJjH,EAAAC,EAAAC,cAAA,0CASG,mDAOlB9D,KAAK8K,8DAGYC,EAAWC,+CAKxB,IAAMnL,EAAQG,KACdiL,IAAG,aAAcC,SAAS,CACxBC,KAAM,IACNC,KAAM,SAAUC,EAAOC,GAAK,IACrBxF,EAAajG,EAAMQ,MAAnByF,UACDyF,EAAe,GACnBN,IAAE,gBAAgBO,KAAK,WACrBD,EAAa7J,KAAKoE,EAAUmF,IAAEjL,MAAMyL,KAAK,kBAE3C5L,EAAM6D,SAAS,CAACoC,UAAW,OAC3BA,EAAYyF,EACZ1L,EAAM6D,SAAS,CAACoC,YAAWa,WAAW,OAG1CsE,IAAG,aAAcS,0BAxTDjF,cA4TTC","file":"static/js/24.b50fbb1c.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Modal, Button} from 'antd';\r\nimport TdExcel from '../td-excel';\r\n\r\nexport default class ListHeaderProps extends Component{\r\n\t\tconstructor(props) {\r\n\t\t\t\tsuper(props);\r\n\t\t\t\tthis.owner = this.props.owner;\r\n\t\t\t\tthis.state = {\r\n\t\t\t\t\tvisible: true\r\n\t\t\t\t}\r\n\t\t\t\tthis.excelRef = React.createRef();\r\n\t\t}\r\n\t\t\r\n\t\thandleOk(){\r\n\t\t\t\tlet excel = this.excelRef.current.excel;\t\t\t\t\r\n\t\t\t\tlet cellSettings = excel.getSettings();\r\n\t\t\t\tlet maxCols = cellSettings[\"maxCols\"], maxRows = cellSettings[\"maxRows\"];\r\n        while(maxRows > 0){\r\n        \t\tif(excel.isEmptyRow(maxRows - 1)){\r\n        \t\t\t\t--maxRows;\r\n        \t\t}else{\r\n        \t\t\t\tbreak;\r\n        \t\t}\r\n        }\r\n        while(maxCols > 0){\r\n        \t\tif(excel.isEmptyCol(maxCols - 1)){\r\n        \t\t\t\t--maxCols;\r\n        \t\t}else{\r\n        \t\t\t\tbreak;\r\n        \t\t}\r\n        }\r\n\t\t\t\t//保存合并项\r\n        let mergeCells = [];\r\n        excel.getPlugin(\"mergeCells\").mergedCellsCollection.mergedCells.map(merge => {\r\n        \t\tif(!merge.removed){\r\n        \t\t\t\tmergeCells.push({row: merge.row, col: merge.col, rowspan: merge.rowspan, colspan: merge.colspan});\r\n        \t\t}\r\n        });        \r\n        let obj_defs = {}, max_level = 1;\r\n        excel.updateSettings({viewportRowRenderingOffset: maxRows, viewportColumnRenderingOffset: maxCols, mergeCells: mergeCells});\r\n        for(let col=0; col < maxCols; col++){\r\n\t\t\t\t\t\tlet arr_columns = [], i_level = 0;\r\n        \t\tfor(let row=0; row < maxRows; row++){\r\n        \t\t\t\tlet cell = excel.getCell(row, col);\r\n        \t\t\t\tlet pos = excel.getCoords(cell);\r\n        \t\t\t\tlet value = excel.getDataAtCell(pos.row, pos.col);\r\n        \t\t\t\tif(value === null) value = '';\r\n        \t\t\t\tif(row === pos.row && value !== \"\"){\r\n        \t\t\t\t\t\ti_level++;\r\n        \t\t\t\t\t\tlet meta = excel.getCellMeta(pos.row, pos.col);\r\n        \t\t\t\t\t\tarr_columns.push({name: value, style: meta.def && meta.def.styleName ? meta.def.styleName : {}});\r\n        \t\t\t\t}\r\n        \t\t\t\tif(value !== \"\" && pos.col === col && row === (maxRows - 1)){\r\n        \t\t\t\t\t\tobj_defs[value] = {columns: arr_columns, width: excel.getColWidth(col)};\r\n        \t\t\t\t\t\tif(max_level < i_level){\r\n        \t\t\t\t\t\t\t\tmax_level = i_level;\r\n        \t\t\t\t\t\t}\r\n        \t\t\t\t}\r\n        \t\t}\r\n        }\r\n\t\t\t\tthis.handleCancel();\r\n        window.setTimeout(()=>this.owner.setSubFieldLayout(obj_defs, max_level), 0);\t\t\t\t\r\n\t\t}\r\n\r\n\t\thandleCancel(){\r\n\t\t\t\twindow.setTimeout(()=>this.owner.setState({listHeaderPropsShowFlag: false}), 0);\r\n\t\t}\r\n\r\n\t\trender(){\r\n\t\t\t\tlet sheets = [{index: \"1\", name: '工作表1', cellSettings: {}, cellMetas: {}, charts: [], images: [], cellStyles: [], fieldMaps: []}], activeKey = '1';\r\n\t\t\t\treturn (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Modal title=\"设计列表头\" visible={this.state.visible} onOk={this.handleOk.bind(this)} onCancel={this.handleCancel.bind(this)} footer={[\r\n\t\t\t\t\t\t\t\t\t\t<Button key=\"back\" type=\"ghost\" size=\"large\" onClick={this.handleCancel.bind(this)}>取 消</Button>,\r\n          \t\t\t\t\t<Button key=\"submit\" type=\"primary\" size=\"large\" onClick={this.handleOk.bind(this)}>提 交</Button>\r\n        \t\t\t\t]} width=\"915px\" style={{top: '20px'}} maskClosable={false}>\r\n        \t\t\t\t\t\t<div style={{height: '400px', overflow: 'hidden'}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<TdExcel ref={this.excelRef} single={true} owner={this} items={this.props.items} sheets={sheets} activeKey={activeKey}/>\r\n        \t\t\t\t\t\t</div>\r\n        \t\t\t\t</Modal>\r\n\t\t\t\t\t\t</div>)\r\n\t\t}\r\n\r\n\t\tcomponentDidMount() {\r\n\t\t\t\tlet me = this;\r\n\t\t\t\twindow.setTimeout(()=>{\r\n\t\t\t\t\t\tlet {level, subFields} = me.props;\r\n\t\t\t\t\t\tlet excel = me.excelRef.current.excel;\r\n\t\t\t\t\t\texcel.updateSettings({maxCols: 100});//列表最多100个字段够不够？\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(subFields){\r\n\t\t\t\t\t\t\t\tlet col_widths = [];\r\n\t\t\t\t\t\t\t\tlet mergeCells = [];\r\n\t\t\t\t\t\t\t\tlet cell_values = [];\r\n\t\t\t\t\t\t\t\tsubFields.map((field, col) => {\r\n\t\t\t\t\t\t\t\t\t\tif(!field.layout){\r\n\t\t\t\t\t\t\t\t\t\t\t\tfield.layout = {columns: []};\r\n\t\t\t\t\t\t\t\t\t\t\t\tfield.layout.columns.push({name: field.title});\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tif(field.layout){\r\n\t\t\t\t\t\t\t\t\t\t\t\tif(field.layout.width){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcol_widths.push(field.layout.width);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tfield.layout.columns.map((layout, row) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//excel.setDataAtCell(row, col, row === (field.layout.columns.length - 1) ? field.title : layout.name);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcell_values.push([row, col, row === (field.layout.columns.length - 1) ? field.title : layout.name]);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(layout.style){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet meta = excel.getCellMeta(row, col);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(!meta.def){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmeta.def = {};\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmeta.def[\"styleName\"] = layout.style;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\texcel.setCellMetaObject(row, col, meta);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tif(cell_values.length > 0){\r\n\t\t\t\t\t\t\t\t\texcel.setDataAtCell(cell_values);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(col_widths.length > 0){\r\n\t\t\t\t\t\t\t\t\t\texcel.updateSettings({colWidths: col_widths});\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tfor(let row = 0; row < level; row++){\r\n\t\t\t\t\t\t\t\t\t\tlet prev_col = 0, prev_value = \"\", col = 0;\r\n\t\t\t\t\t\t\t\t\t\twhile(col < subFields.length){\r\n\t\t\t\t\t\t\t\t\t\t\t\tlet value = excel.getDataAtCell(row, col);\r\n\t\t\t\t\t\t\t\t\t\t\t\tif(value === null) value = '';\r\n\t\t\t\t\t\t\t\t\t\t\t\tif(prev_value !== \"\" && prev_value !== value){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//excel.getPlugin(\"MergeCells\").merge(row, prev_col, row, col - 1);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmergeCells.push({row, col: prev_col, rowspan: 1, colspan: col - prev_col});\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprev_value = \"\";\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tif(prev_value === \"\"){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprev_value = value;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprev_col = col;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcol++;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tif(prev_value !== ''){\r\n\t\t\t\t\t\t\t\t\t\t\t\tmergeCells.push({row, col: prev_col, rowspan: 1, colspan: col - prev_col});\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tfor(let col = 0; col < subFields.length; col++){\r\n\t\t\t\t\t\t\t\t\t\tfor(let row = level - 1; row >= 0; row--){\r\n\t\t\t\t\t\t\t\t\t\t\t\tlet value = excel.getDataAtCell(row, col);\r\n\t\t\t\t\t\t\t\t\t\t\t\tif(value === null) value = '';\r\n\t\t\t\t\t\t\t\t\t\t\t\tif(value !== \"\"){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(row < level - 1){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//excel.getPlugin(\"MergeCells\").merge(row, col, level - 1, col);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmergeCells.push({row, col, rowspan: level - row, colspan: 1});\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif(mergeCells.length > 0){\r\n\t\t\t\t\t\t\t\t\t\texcel.updateSettings({mergeCells});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t}, 50);\r\n\t\t}\r\n}","import React, { Component } from 'react';\r\nimport {Select, Button, Menu, Dropdown, Icon} from 'antd';\r\nimport {commonControlles, allControlles} from '../Controlles';\r\nimport Formula from './formula';\r\nimport Outlink from './outlink';\r\nimport ListHeaderProps from './ListHeaderProps.js';\r\nimport './list.css';\r\nimport $ from 'jquery';\r\nimport \"jquery-ui/ui/widgets/sortable.js\";\r\n\r\nclass ListProps extends Component {\r\n\t\tconstructor(props) {\r\n\t\t\t\tsuper(props);\r\n\t\t\t\tthis.owner = this.props.owner;\r\n\t\t\t\t\r\n\t\t\t\tthis.state = {\r\n\t\t\t\t\t\tischanged: false,\r\n\t\t\t\t\t\texprShowFlag: false,\r\n\t\t\t\t\t\toutLinkShowFlag: false,\r\n\t\t\t\t\t\tlistHeaderPropsShowFlag: false,\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t  \"name\": \"\",//标识符，数据存储字段名，可为空\r\n\t\t\t\t\t  \"title\": \"列表\",//标题，不为空\r\n\t\t\t\t\t  \"desc\": \"\",//描述，可为空\r\n\t\t\t\t\t  \"defaultType\": \"custom\",//默认值，可选值为custom、expr、outlink\r\n\t\t\t\t\t  \"defaultValue\": \"\",\r\n\t\t\t\t\t  \"required\": false,//必填标识\r\n\t\t\t\t\t  \"noDup\": false,//不可重复标识\r\n\t\t\t\t\t  \"readonly\":false,//只读标识\r\n\t\t\t\t\t  \"hidden\":false,//隐藏标识\r\n\t\t\t\t\t  \"asTitle\":false,//作为单据标题标识\r\n\t\t\t\t\t  \"isSearch\": false,//查询字段\r\n\t\t\t\t\t  \"link\":\"\",//超链接地址\r\n\t\t\t\t\t  \"type\": \"list\",\r\n\t\t\t\t\t  \"subFields\": [],\r\n\t\t\t\t\t  \"defaultRows\": 1,\r\n\t\t\t\t\t  \"headLevel\": 1,\r\n\t\t\t\t\t  \"autoSize\": false,//自动行高\r\n\t\t\t\t\t  \"treeNode\": '',//树节点\r\n\t\t\t\t\t  'hideSeqNumber': false,//隐藏序列号\r\n\t\t\t\t\t  'defaultPageSize': 10,//默认分页记录数\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.state = {...this.state, ...this.props.def};\r\n\t\t\t\t\r\n\t\t\t\tthis.owner.comfirmControlProp = this.comfirmControlProp.bind(this);\t\r\n\t\t}\t\r\n\t\t\r\n\t\tcomfirmControlProp(){\r\n\t\t\t\tif(this.state.ischanged){\r\n\t\t\t\t\t\tthis.setState({ischanged: false});\r\n\t\t\t\t\t\tlet state = {...this.state};\r\n\t\t\t\t\t\tdelete state[\"ischanged\"];\r\n\t\t\t\t\t\tdelete state[\"exprShowFlag\"];\r\n\t\t\t\t\t\tdelete state[\"outLinkShowFlag\"];\r\n\t\t\t\t\t\tdelete state[\"listHeaderPropsShowFlag\"];\r\n\t\t\t\t\t\tthis.owner.sysCurCellMeta(state);\r\n\t\t\t\t}\t\t\t\t\r\n\t\t}\t\t\t\r\n\t\t\r\n\t\tsetControlProp(key, value){\r\n\t\t\t\tif(key === \"title\"){\r\n\t\t\t\t\t\tthis.setState({[key]: value, name: value});\r\n\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.setState({[key]: value});\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState({ischanged: true});\r\n\t\t}\r\n\t\t\r\n\t\taddSubField(item){\r\n\t\t\t\tlet {subFields} = this.state;\r\n\t\t\t\tlet theControl = allControlles.filter(control=>control.name===item.key);\r\n\t\t\t\tsubFields.push({title: theControl[0].label, type: item.key});\r\n\t\t\t\tthis.setState({subFields});\r\n\t\t\t\twindow.setTimeout(()=>{\r\n\t\t\t\t\t\tlet state = {...this.state};\r\n\t\t\t\t\t\tdelete state[\"ischanged\"];\r\n\t\t\t\t\t\tdelete state[\"exprShowFlag\"];\r\n\t\t\t\t\t\tdelete state[\"outLinkShowFlag\"];\r\n\t\t\t\t\t\tdelete state[\"listHeaderPropsShowFlag\"];\r\n\t\t\t\t\t\tthis.owner.sysCurCellMeta(state);\t\t\t\t\t\t\r\n\t\t\t\t\t\t}, 0);\r\n\t\t}\r\n\t\t\r\n\t\tsetSubField(field, index){\r\n\t\t\t\tthis.owner.setState({curSubField: field, curSubFieldIndex: index});\t\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tdeleteSubField(index){\r\n\t\t\t\tif(window.confirm('确定要删除该字段吗？')){\r\n\t\t\t\t\t\tlet {subFields} = this.state;\r\n\t\t\t\t\t\tif(subFields){\r\n\t\t\t\t\t\t\t\tsubFields = subFields.filter((field, index2) => index !== index2);\r\n\t\t\t\t\t\t\t\tthis.setState({subFields});\r\n\t\t\t\t\t\t\t\twindow.setTimeout(()=>{\r\n\t\t\t\t\t\t\t\t\t\tlet state = {...this.state};\r\n\t\t\t\t\t\t\t\t\t\tdelete state[\"ischanged\"];\r\n\t\t\t\t\t\t\t\t\t\tdelete state[\"exprShowFlag\"];\r\n\t\t\t\t\t\t\t\t\t\tdelete state[\"outLinkShowFlag\"];\r\n\t\t\t\t\t\t\t\t\t\tdelete state[\"listHeaderPropsShowFlag\"];\r\n\t\t\t\t\t\t\t\t\t\tthis.owner.sysCurCellMeta(state);\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t}, 0);\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tsetSubFieldLayout(obj_def, headLevel){\r\n\t\t\t\tlet {subFields} = this.state;\r\n\t\t\t\tif(subFields){\r\n\t\t\t\t\tsubFields.map(field => {if(obj_def[field[\"title\"]]){field[\"layout\"] = obj_def[field[\"title\"]]; field[\"layout\"][\"columns\"][field[\"layout\"][\"columns\"].length - 1][\"name\"] = field['alias'] && field['alias'] !== '' ? field['alias'] : field['title']}});\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState({subFields, headLevel});\r\n\t\t\t\twindow.setTimeout(()=>{\r\n\t\t\t\t\t\tlet state = {...this.state};\r\n\t\t\t\t\t\tdelete state[\"ischanged\"];\r\n\t\t\t\t\t\tdelete state[\"exprShowFlag\"];\r\n\t\t\t\t\t\tdelete state[\"outLinkShowFlag\"];\r\n\t\t\t\t\t\tdelete state[\"listHeaderPropsShowFlag\"];\r\n\t\t\t\t\t\tthis.owner.sysCurCellMeta(state);\t\t\t\t\t\t\r\n\t\t\t\t\t\t}, 0);\r\n\t\t}\r\n\t\t\r\n\t\trender(){\r\n\t\t\t\tlet me = this;\r\n\t\t\t\tlet commonControllesIndex = commonControlles.filter(control => control.name === this.state.type);\r\n\t\t\t  let allControllesIndex = allControlles.filter(control => control.name === this.state.type);\r\n\t\t\t  let columns = Object.keys(this.props.columnsOfForm).map(key=> this.props.columnsOfForm[key]);\r\n\t\t\t  let {parent_list} = this.props;\r\n\t\t\t  const menu = (\r\n\t\t\t\t  <Menu onClick={this.addSubField.bind(this)}>\r\n\t\t\t\t  \t{\r\n\t\t\t\t    \t\tallControlles.map(control => control.name != \"autoNumber\" && control.name != \"list\"  && control.name != \"signature\" && \r\n\t\t\t\t    \t\t\t\t<Menu.Item key={control.name}>\r\n\t\t\t\t    \t\t\t\t\t\t{control.label}\r\n\t\t\t\t    \t\t\t\t</Menu.Item>\r\n\t\t\t\t    \t\t)\r\n\t\t\t\t    }\r\n\t\t\t\t  </Menu>\r\n\t\t\t\t);\r\n\t\t\t\t\r\n\t\t\t\tconst data = {\r\n\t\t\t\t\t\tvalue: this.state.defaultValue,\r\n\t\t\t\t\t\tformId: this.props.formId,\r\n\t\t\t\t\t\tforms: '',\r\n\t\t\t\t\t\tlogic: false,\r\n\t\t\t\t\t\treceiver(expr) {\r\n\t\t\t\t\t\t\t\tme.setState({defaultValue: expr, exprShowFlag: false});\r\n\t\t\t\t\t\t\t\twindow.setTimeout(()=>{\r\n\t\t\t\t\t\t\t\t\t\tlet state = {...me.state};\r\n\t\t\t\t\t\t\t\t\t\tdelete state[\"exprShowFlag\"];\r\n\t\t\t\t\t\t\t\t\t\tdelete state[\"outLinkShowFlag\"];\r\n\t\t\t\t\t\t\t\t\t\tme.props.sysCurCellMeta(state);\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t}, 0);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tcancel() {\r\n\t\t\t\t\t\t\t\tme.setState({exprShowFlag: false});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className=\"config-panel list-panel \">\r\n\t\t\t \t\t\t\t\t<div className=\"ant-row ant-form-item\">\r\n\t\t\t            <div className=\"ant-form-item-label\">\r\n\t\t\t              <label>名称</label>\r\n\t\t\t            </div>\r\n\t\t\t            <div className=\"ant-form-item-control has-success\">\r\n\t\t\t              <span className=\"ant-input-wrapper\">\r\n\t\t\t              <input type=\"text\" placeholder=\"请输入控件名称\" className=\"config-text-len ant-input\" value={this.state.title} onChange={e => this.setControlProp('title', e.target.value)}/>\r\n\t\t\t              </span>\r\n\t\t\t            </div>\r\n\t\t\t          </div>\r\n\t\t\t          <div className=\"ant-row ant-form-item\">\r\n\t\t\t            <div className=\"ant-form-item-label\">\r\n\t\t\t              <label>控件类型</label>\r\n\t\t\t              <span className=\"ant-input-wrapper config-typename\">\r\n\t\t\t              \t\t{\r\n\t\t\t              \t\t\t\tcommonControllesIndex && commonControllesIndex.length > 0  ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select value={[this.state.type]} onChange={value => this.setControlProp('type', value)} size=\"small\" style={{\"width\":\"120px\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcommonControlles.map(control => <Select.Option value={control.name} key={control.name}>{control.label}</Select.Option>)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Select> :\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"ant-input-wrapper config-typename\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{allControllesIndex[0][\"label\"]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t              </span>\r\n\t\t\t            </div>\r\n\t\t\t          </div>\r\n\t\t\t          <div className=\"ant-row ant-form-item\">\r\n\t\t\t            <div className=\"ant-form-item-label\">\r\n\t\t\t              <label>描述</label>\r\n\t\t\t            </div>\r\n\t\t\t            <div className=\"ant-form-item-control has-success\">\r\n\t\t\t              <span className=\"ant-input-wrapper\">\r\n\t\t\t                <textarea type=\"textarea\" placeholder=\"请输入控件描述\" className=\"config-text-desc ant-input\" value={this.state.desc} onChange={e => this.setControlProp('desc', e.target.value)}></textarea>\r\n\t\t\t              </span>\r\n\t\t\t            </div>\r\n\t\t\t          </div>\r\n\t\t\t          <div className=\"ant-row ant-form-item\">\r\n\t\t\t            <div className=\"ant-form-item-label\">\r\n\t\t\t              <label>字段</label>\r\n\t\t\t            </div>\r\n\t\t\t            <div className=\"ant-form-item-control has-success\">\r\n\t\t\t              <Dropdown overlay={menu}>\r\n\t\t\t              \t\t<Button>添加字段</Button>\r\n\t\t\t              </Dropdown>\r\n\t\t\t              <Button onClick={() => this.setState({listHeaderPropsShowFlag: true})}>设计表头</Button>\r\n\t\t\t              {\r\n\t\t\t              \t\tthis.state.listHeaderPropsShowFlag ? <ListHeaderProps owner={this} level={this.state.headLevel} subFields={this.state.subFields}  items={this.props.columnsOfForm}/> : null\r\n\t\t\t              }\t\t\t\t                \t\t\t              \t\t\t            \r\n\t\t\t              <ul className=\"sub-fields\" id=\"sortable\">\r\n\t\t\t              \t{\r\n\t\t\t              \t\t\tthis.state.subFields ? this.state.subFields.map((field,index)=>\r\n\t\t\t              \t\t\t<li key={index} fieldIndex={index}>\r\n\t\t\t                  \t\t\t<p onClick={this.setSubField.bind(this, field, index)}>{field.title}</p>\r\n\t\t\t                  \t\t\t<span className=\"delete\" onClick = {this.deleteSubField.bind(this, index)}><Icon type=\"minus-circle\" /></span>\r\n\t\t\t                \t\t</li>) : null\t\t\t                \t\t\r\n\t\t\t              \t}\r\n\t\t\t              </ul>            \r\n\t\t\t            </div>\r\n\t\t\t          </div>\t\t\t          \r\n\t\t\t          <div className=\"ant-row ant-form-item\">\r\n\t\t\t            <div className=\"ant-form-item-label\">\r\n\t\t\t              <label>默认行数</label>\r\n\t\t\t            </div>\r\n\t\t\t            <div className=\"ant-form-item-control has-success\">\r\n\t\t\t              <span className=\"ant-input-wrapper\">\r\n\t\t\t                <input className=\"ant-input\" value={this.state.defaultRows} onChange={e=>this.setControlProp('defaultRows', e.target.value)}/>\r\n\t\t\t              </span>\r\n\t\t\t            </div>\r\n\t\t\t          </div>\t\r\n\t\t\t          <div className=\"ant-row ant-form-item\">\r\n\t\t\t            <div className=\"ant-form-item-label\">\r\n\t\t\t              <label>默认分页行数</label>\r\n\t\t\t            </div>\r\n\t\t\t            <div className=\"ant-form-item-control has-success\">\r\n\t\t\t              <span className=\"ant-input-wrapper\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Select size=\"small\"  value={[this.state.defaultPageSize]} placeholder=\"请选择\" onChange={value => this.setControlProp('defaultPageSize', value)}  style={{\"width\": 120}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select.Option value={'1'} key={1}>{'1条/页'}</Select.Option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select.Option value={'2'} key={2}>{'2条/页'}</Select.Option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select.Option value={'3'} key={3}>{'3条/页'}</Select.Option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select.Option value={'4'} key={4}>{'4条/页'}</Select.Option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select.Option value={'5'} key={5}>{'5条/页'}</Select.Option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select.Option value={'10'} key={10}>{'10条/页'}</Select.Option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select.Option value={'15'} key={15}>{'15条/页'}</Select.Option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select.Option value={'20'} key={20}>{'20条/页'}</Select.Option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select.Option value={'50'} key={50}>{'50条/页'}</Select.Option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select.Option value={'100'} key={100}>{'100条/页'}</Select.Option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Select>\t\t\t                \r\n\t\t\t              </span>\r\n\t\t\t            </div>\r\n\t\t\t          </div>\t\t\t\t          \t          \r\n\t\t\t          <div className=\"ant-row ant-form-item\">\r\n\t\t\t            <div className=\"ant-form-item-label\">\r\n\t\t\t              <label>树节点</label>\r\n\t\t\t            </div>\r\n\t\t\t            <div className=\"ant-form-item-control has-success\">\r\n\t\t\t              <span className=\"ant-input-wrapper\">\r\n\t\t\t\t\t              <Select size=\"small\" value={[this.state.treeNode]} placeholder=\"请选择\" style={{\"width\": 150}} onChange={value=>this.setControlProp('treeNode', value)}>\r\n\t\t\t\t\t                <Select.Option value={''}>{''}</Select.Option>\r\n\t\t\t\t\t                {\r\n\t\t\t\t\t\t          \t\t\tcolumns.map(item => item.name.indexOf(this.state.title + '.') === 0 && item.type === 'text' && <Select.Option value={item.id}>{item.name}</Select.Option>)\r\n\t\t\t\t\t\t          \t\t}\r\n\t\t\t\t\t              </Select>\r\n\t\t\t              </span>\r\n\t\t\t            </div>\r\n\t\t\t          </div>\r\n\t\t\t          <div className=\"ant-row ant-form-item last-ant-form-item\">\t     \r\n\t\t\t          \t<div className=\"ant-form-item-control has-success\">\r\n\t\t\t              <label className=\"ant-checkbox-wrapper\">\r\n\t\t\t                  <input type=\"checkbox\" className=\"config-text-readonly\" checked={this.state.readonly} onChange={e => this.setControlProp('readonly', e.target.checked)}/>\r\n\t\t\t                <span>只读</span>\r\n\t\t\t              </label>\r\n\t\t\t            </div>    \r\n\t\t\t            <div className=\"ant-form-item-control has-success\">\r\n\t\t\t              <label className=\"ant-checkbox-wrapper\">\r\n\t\t\t                  <input type=\"checkbox\" className=\"config-text-hidden\" checked={this.state.hidden} onChange={e => this.setControlProp('hidden', e.target.checked)}/>\r\n\t\t\t                <span>隐藏</span>\r\n\t\t\t              </label>\r\n\t\t\t            </div>\r\n\t\t\t            <div className=\"ant-form-item-control has-success\">\r\n\t\t\t              <label className=\"ant-checkbox-wrapper\">\r\n\t\t\t                  <input type=\"checkbox\" className=\"config-text-hidden\" checked={this.state.hideSeqNumber} onChange={e => this.setControlProp('hideSeqNumber', e.target.checked)}/>\r\n\t\t\t                <span>隐藏序号</span>\r\n\t\t\t              </label>\r\n\t\t\t            </div>\r\n\t\t\t            {0?\r\n\t\t\t            <div className=\"ant-form-item-control has-success\">\r\n\t\t\t              <label className=\"ant-checkbox-wrapper\">\r\n\t\t\t                  <input type=\"checkbox\" className=\"config-text-autosize\" checked={this.state.autoSize} onChange={e => this.setControlProp('autoSize', e.target.checked)}/>\r\n\t\t\t                <span>自动行高</span>\r\n\t\t\t              </label>\r\n\t\t\t            </div>:null}\t\t\t            \r\n\t\t\t          </div>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\tcomponentDidMount() {\r\n\t\t\t\tthis.makeListSortable();\r\n\t\t}\r\n\t\t\r\n\t\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\t\t\t//this.makeListSortable();\r\n\t\t}\r\n\t\t\r\n\t\tmakeListSortable() {\r\n        const _this = this;\r\n        $( \"#sortable\" ).sortable({\r\n          axis: \"y\",\r\n          stop: function( event, ui ) {\r\n          \t\tlet {subFields} = _this.state;\r\n          \t\tlet newSubFields = [];\r\n          \t\t$(\"#sortable li\").each(function(){\r\n          \t\t\t\tnewSubFields.push(subFields[$(this).attr('fieldIndex')]);\r\n          \t\t});\r\n          \t\t_this.setState({subFields: null})\r\n          \t\tsubFields = newSubFields;\r\n          \t\t_this.setState({subFields, ischanged: true})\r\n          }\r\n        });\r\n        $( \"#sortable\" ).disableSelection();\r\n      }\r\n}\r\n\r\nexport default ListProps;"],"sourceRoot":""}