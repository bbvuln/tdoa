{"version":3,"sources":["../node_modules/jquery-ui/ui/widgets/sortable.js"],"names":["__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","__webpack_require__","undefined","$","widget","ui","mouse","version","widgetEventPrefix","ready","options","appendTo","axis","connectWith","containment","cursor","cursorAt","dropOnEmpty","forcePlaceholderSize","forceHelperSize","grid","handle","helper","items","opacity","placeholder","revert","scroll","scrollSensitivity","scrollSpeed","scope","tolerance","zIndex","activate","beforeStop","change","deactivate","out","over","receive","remove","sort","start","stop","update","_isOverAxis","x","reference","size","_isFloating","item","test","css","_create","this","containerCache","_addClass","refresh","offset","element","_mouseInit","_setHandleClassName","_setOption","key","value","_super","that","_removeClass","find","each","instance","_destroy","_mouseDestroy","i","length","removeData","widgetName","_mouseCapture","event","overrideHandle","currentItem","validHandle","reverting","disabled","type","_refreshItems","target","parents","data","addBack","_removeCurrentsFromItems","_mouseStart","noActivation","body","o","currentContainer","refreshPositions","_createHelper","_cacheHelperProportions","_cacheMargins","scrollParent","top","margins","left","extend","click","pageX","pageY","parent","_getParentOffset","relative","_getRelativeOffset","cssPosition","originalPosition","_generatePosition","originalPageX","originalPageY","_adjustOffsetFromHelper","domPosition","prev","hide","_createPlaceholder","_setContainment","document","storedCursor","storedStylesheet","_storedOpacity","_storedZIndex","tagName","overflowOffset","_trigger","_uiHash","_preserveHelperProportions","containers","ddmanager","current","dropBehaviour","prepareOffsets","dragging","_mouseDrag","itemElement","intersection","scrolled","position","positionAbs","_convertPositionTo","lastPositionAbs","offsetHeight","scrollTop","offsetWidth","scrollLeft","window","height","width","style","_intersectsWithPointer","contains","direction","_intersectsWithSides","_rearrange","_contactContainers","drag","_mouseStop","noPropagation","drop","cur","animation","offsetParent","animate","parseInt","_clear","cancel","_mouseUp","Event","_storedCSS","show","parentNode","removeChild","_noFinalSort","after","prepend","serialize","_getItemsAsjQuery","connected","str","res","attr","attribute","match","expression","push","join","toArray","ret","_intersectsWith","x1","x2","helperProportions","y1","y2","l","r","t","b","dyClick","dxClick","isOverElementHeight","isOverElementWidth","isOverElement","forcePointerForContainers","floating","verticalDirection","horizontalDirection","_getDragVerticalDirection","_getDragHorizontalDirection","isOverBottomHalf","isOverRightHalf","delta","_connectWith","constructor","String","j","inst","queries","widgetFullName","isFunction","call","not","addItems","list","grep","targetData","_queries","queriesLength","fast","p","toleranceElement","outerWidth","outerHeight","custom","refreshContainers","className","nodeName","toLowerCase","_createTrPlaceholder","eq","container","innerHeight","innerWidth","sourceTr","targetTr","children","dist","itemWithLeastDistance","posProperty","sizeProperty","nearBottom","innermostContainer","innermostIndex","Math","abs","apply","clone","appendChild","obj","split","isArray","right","bottom","po","ie","ce","co","scrollHeight","max","scrollWidth","d","pos","mod","scrollIsRootNode","round","a","hardRefresh","insertBefore","nextSibling","counter","_delay","delayedTriggers","before","delayEvent","fromOutside","c","cancelHelperRemoval","Widget","prototype","arguments","_inst","sender","exports","module"],"mappings":"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","file":"static/js/26.75212b51.chunk.js","sourcesContent":["/*!\n * jQuery UI Sortable 1.12.1\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n//>>label: Sortable\n//>>group: Interactions\n//>>description: Enables items in a list to be sorted using the mouse.\n//>>docs: http://api.jqueryui.com/sortable/\n//>>demos: http://jqueryui.com/sortable/\n//>>css.structure: ../../themes/base/sortable.css\n(function (factory) {\n  if (typeof define === \"function\" && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([\"jquery\", \"./mouse\", \"../data\", \"../ie\", \"../scroll-parent\", \"../version\", \"../widget\"], factory);\n  } else {\n    // Browser globals\n    factory(jQuery);\n  }\n})(function ($) {\n  return $.widget(\"ui.sortable\", $.ui.mouse, {\n    version: \"1.12.1\",\n    widgetEventPrefix: \"sort\",\n    ready: false,\n    options: {\n      appendTo: \"parent\",\n      axis: false,\n      connectWith: false,\n      containment: false,\n      cursor: \"auto\",\n      cursorAt: false,\n      dropOnEmpty: true,\n      forcePlaceholderSize: false,\n      forceHelperSize: false,\n      grid: false,\n      handle: false,\n      helper: \"original\",\n      items: \"> *\",\n      opacity: false,\n      placeholder: false,\n      revert: false,\n      scroll: true,\n      scrollSensitivity: 20,\n      scrollSpeed: 20,\n      scope: \"default\",\n      tolerance: \"intersect\",\n      zIndex: 1000,\n      // Callbacks\n      activate: null,\n      beforeStop: null,\n      change: null,\n      deactivate: null,\n      out: null,\n      over: null,\n      receive: null,\n      remove: null,\n      sort: null,\n      start: null,\n      stop: null,\n      update: null\n    },\n    _isOverAxis: function _isOverAxis(x, reference, size) {\n      return x >= reference && x < reference + size;\n    },\n    _isFloating: function _isFloating(item) {\n      return /left|right/.test(item.css(\"float\")) || /inline|table-cell/.test(item.css(\"display\"));\n    },\n    _create: function _create() {\n      this.containerCache = {};\n\n      this._addClass(\"ui-sortable\"); //Get the items\n\n\n      this.refresh(); //Let's determine the parent's offset\n\n      this.offset = this.element.offset(); //Initialize mouse events for interaction\n\n      this._mouseInit();\n\n      this._setHandleClassName(); //We're ready to go\n\n\n      this.ready = true;\n    },\n    _setOption: function _setOption(key, value) {\n      this._super(key, value);\n\n      if (key === \"handle\") {\n        this._setHandleClassName();\n      }\n    },\n    _setHandleClassName: function _setHandleClassName() {\n      var that = this;\n\n      this._removeClass(this.element.find(\".ui-sortable-handle\"), \"ui-sortable-handle\");\n\n      $.each(this.items, function () {\n        that._addClass(this.instance.options.handle ? this.item.find(this.instance.options.handle) : this.item, \"ui-sortable-handle\");\n      });\n    },\n    _destroy: function _destroy() {\n      this._mouseDestroy();\n\n      for (var i = this.items.length - 1; i >= 0; i--) {\n        this.items[i].item.removeData(this.widgetName + \"-item\");\n      }\n\n      return this;\n    },\n    _mouseCapture: function _mouseCapture(event, overrideHandle) {\n      var currentItem = null,\n          validHandle = false,\n          that = this;\n\n      if (this.reverting) {\n        return false;\n      }\n\n      if (this.options.disabled || this.options.type === \"static\") {\n        return false;\n      } //We have to refresh the items data once first\n\n\n      this._refreshItems(event); //Find out if the clicked node (or one of its parents) is a actual item in this.items\n\n\n      $(event.target).parents().each(function () {\n        if ($.data(this, that.widgetName + \"-item\") === that) {\n          currentItem = $(this);\n          return false;\n        }\n      });\n\n      if ($.data(event.target, that.widgetName + \"-item\") === that) {\n        currentItem = $(event.target);\n      }\n\n      if (!currentItem) {\n        return false;\n      }\n\n      if (this.options.handle && !overrideHandle) {\n        $(this.options.handle, currentItem).find(\"*\").addBack().each(function () {\n          if (this === event.target) {\n            validHandle = true;\n          }\n        });\n\n        if (!validHandle) {\n          return false;\n        }\n      }\n\n      this.currentItem = currentItem;\n\n      this._removeCurrentsFromItems();\n\n      return true;\n    },\n    _mouseStart: function _mouseStart(event, overrideHandle, noActivation) {\n      var i,\n          body,\n          o = this.options;\n      this.currentContainer = this; //We only need to call refreshPositions, because the refreshItems call has been moved to\n      // mouseCapture\n\n      this.refreshPositions(); //Create and append the visible helper\n\n      this.helper = this._createHelper(event); //Cache the helper size\n\n      this._cacheHelperProportions();\n      /*\n       * - Position generation -\n       * This block generates everything position related - it's the core of draggables.\n       */\n      //Cache the margins of the original element\n\n\n      this._cacheMargins(); //Get the next scrolling parent\n\n\n      this.scrollParent = this.helper.scrollParent(); //The element's absolute position on the page minus margins\n\n      this.offset = this.currentItem.offset();\n      this.offset = {\n        top: this.offset.top - this.margins.top,\n        left: this.offset.left - this.margins.left\n      };\n      $.extend(this.offset, {\n        click: {\n          //Where the click happened, relative to the element\n          left: event.pageX - this.offset.left,\n          top: event.pageY - this.offset.top\n        },\n        parent: this._getParentOffset(),\n        // This is a relative to absolute position minus the actual position calculation -\n        // only used for relative positioned helper\n        relative: this._getRelativeOffset()\n      }); // Only after we got the offset, we can change the helper's position to absolute\n      // TODO: Still need to figure out a way to make relative sorting possible\n\n      this.helper.css(\"position\", \"absolute\");\n      this.cssPosition = this.helper.css(\"position\"); //Generate the original position\n\n      this.originalPosition = this._generatePosition(event);\n      this.originalPageX = event.pageX;\n      this.originalPageY = event.pageY; //Adjust the mouse offset relative to the helper if \"cursorAt\" is supplied\n\n      o.cursorAt && this._adjustOffsetFromHelper(o.cursorAt); //Cache the former DOM position\n\n      this.domPosition = {\n        prev: this.currentItem.prev()[0],\n        parent: this.currentItem.parent()[0]\n      }; // If the helper is not the original, hide the original so it's not playing any role during\n      // the drag, won't cause anything bad this way\n\n      if (this.helper[0] !== this.currentItem[0]) {\n        this.currentItem.hide();\n      } //Create the placeholder\n\n\n      this._createPlaceholder(); //Set a containment if given in the options\n\n\n      if (o.containment) {\n        this._setContainment();\n      }\n\n      if (o.cursor && o.cursor !== \"auto\") {\n        // cursor option\n        body = this.document.find(\"body\"); // Support: IE\n\n        this.storedCursor = body.css(\"cursor\");\n        body.css(\"cursor\", o.cursor);\n        this.storedStylesheet = $(\"<style>*{ cursor: \" + o.cursor + \" !important; }</style>\").appendTo(body);\n      }\n\n      if (o.opacity) {\n        // opacity option\n        if (this.helper.css(\"opacity\")) {\n          this._storedOpacity = this.helper.css(\"opacity\");\n        }\n\n        this.helper.css(\"opacity\", o.opacity);\n      }\n\n      if (o.zIndex) {\n        // zIndex option\n        if (this.helper.css(\"zIndex\")) {\n          this._storedZIndex = this.helper.css(\"zIndex\");\n        }\n\n        this.helper.css(\"zIndex\", o.zIndex);\n      } //Prepare scrolling\n\n\n      if (this.scrollParent[0] !== this.document[0] && this.scrollParent[0].tagName !== \"HTML\") {\n        this.overflowOffset = this.scrollParent.offset();\n      } //Call callbacks\n\n\n      this._trigger(\"start\", event, this._uiHash()); //Recache the helper size\n\n\n      if (!this._preserveHelperProportions) {\n        this._cacheHelperProportions();\n      } //Post \"activate\" events to possible containers\n\n\n      if (!noActivation) {\n        for (i = this.containers.length - 1; i >= 0; i--) {\n          this.containers[i]._trigger(\"activate\", event, this._uiHash(this));\n        }\n      } //Prepare possible droppables\n\n\n      if ($.ui.ddmanager) {\n        $.ui.ddmanager.current = this;\n      }\n\n      if ($.ui.ddmanager && !o.dropBehaviour) {\n        $.ui.ddmanager.prepareOffsets(this, event);\n      }\n\n      this.dragging = true;\n\n      this._addClass(this.helper, \"ui-sortable-helper\"); // Execute the drag once - this causes the helper not to be visiblebefore getting its\n      // correct position\n\n\n      this._mouseDrag(event);\n\n      return true;\n    },\n    _mouseDrag: function _mouseDrag(event) {\n      var i,\n          item,\n          itemElement,\n          intersection,\n          o = this.options,\n          scrolled = false; //Compute the helpers position\n\n      this.position = this._generatePosition(event);\n      this.positionAbs = this._convertPositionTo(\"absolute\");\n\n      if (!this.lastPositionAbs) {\n        this.lastPositionAbs = this.positionAbs;\n      } //Do scrolling\n\n\n      if (this.options.scroll) {\n        if (this.scrollParent[0] !== this.document[0] && this.scrollParent[0].tagName !== \"HTML\") {\n          if (this.overflowOffset.top + this.scrollParent[0].offsetHeight - event.pageY < o.scrollSensitivity) {\n            this.scrollParent[0].scrollTop = scrolled = this.scrollParent[0].scrollTop + o.scrollSpeed;\n          } else if (event.pageY - this.overflowOffset.top < o.scrollSensitivity) {\n            this.scrollParent[0].scrollTop = scrolled = this.scrollParent[0].scrollTop - o.scrollSpeed;\n          }\n\n          if (this.overflowOffset.left + this.scrollParent[0].offsetWidth - event.pageX < o.scrollSensitivity) {\n            this.scrollParent[0].scrollLeft = scrolled = this.scrollParent[0].scrollLeft + o.scrollSpeed;\n          } else if (event.pageX - this.overflowOffset.left < o.scrollSensitivity) {\n            this.scrollParent[0].scrollLeft = scrolled = this.scrollParent[0].scrollLeft - o.scrollSpeed;\n          }\n        } else {\n          if (event.pageY - this.document.scrollTop() < o.scrollSensitivity) {\n            scrolled = this.document.scrollTop(this.document.scrollTop() - o.scrollSpeed);\n          } else if (this.window.height() - (event.pageY - this.document.scrollTop()) < o.scrollSensitivity) {\n            scrolled = this.document.scrollTop(this.document.scrollTop() + o.scrollSpeed);\n          }\n\n          if (event.pageX - this.document.scrollLeft() < o.scrollSensitivity) {\n            scrolled = this.document.scrollLeft(this.document.scrollLeft() - o.scrollSpeed);\n          } else if (this.window.width() - (event.pageX - this.document.scrollLeft()) < o.scrollSensitivity) {\n            scrolled = this.document.scrollLeft(this.document.scrollLeft() + o.scrollSpeed);\n          }\n        }\n\n        if (scrolled !== false && $.ui.ddmanager && !o.dropBehaviour) {\n          $.ui.ddmanager.prepareOffsets(this, event);\n        }\n      } //Regenerate the absolute position used for position checks\n\n\n      this.positionAbs = this._convertPositionTo(\"absolute\"); //Set the helper position\n\n      if (!this.options.axis || this.options.axis !== \"y\") {\n        this.helper[0].style.left = this.position.left + \"px\";\n      }\n\n      if (!this.options.axis || this.options.axis !== \"x\") {\n        this.helper[0].style.top = this.position.top + \"px\";\n      } //Rearrange\n\n\n      for (i = this.items.length - 1; i >= 0; i--) {\n        //Cache variables and intersection, continue if no intersection\n        item = this.items[i];\n        itemElement = item.item[0];\n        intersection = this._intersectsWithPointer(item);\n\n        if (!intersection) {\n          continue;\n        } // Only put the placeholder inside the current Container, skip all\n        // items from other containers. This works because when moving\n        // an item from one container to another the\n        // currentContainer is switched before the placeholder is moved.\n        //\n        // Without this, moving items in \"sub-sortables\" can cause\n        // the placeholder to jitter between the outer and inner container.\n\n\n        if (item.instance !== this.currentContainer) {\n          continue;\n        } // Cannot intersect with itself\n        // no useless actions that have been done before\n        // no action if the item moved is the parent of the item checked\n\n\n        if (itemElement !== this.currentItem[0] && this.placeholder[intersection === 1 ? \"next\" : \"prev\"]()[0] !== itemElement && !$.contains(this.placeholder[0], itemElement) && (this.options.type === \"semi-dynamic\" ? !$.contains(this.element[0], itemElement) : true)) {\n          this.direction = intersection === 1 ? \"down\" : \"up\";\n\n          if (this.options.tolerance === \"pointer\" || this._intersectsWithSides(item)) {\n            this._rearrange(event, item);\n          } else {\n            break;\n          }\n\n          this._trigger(\"change\", event, this._uiHash());\n\n          break;\n        }\n      } //Post events to containers\n\n\n      this._contactContainers(event); //Interconnect with droppables\n\n\n      if ($.ui.ddmanager) {\n        $.ui.ddmanager.drag(this, event);\n      } //Call callbacks\n\n\n      this._trigger(\"sort\", event, this._uiHash());\n\n      this.lastPositionAbs = this.positionAbs;\n      return false;\n    },\n    _mouseStop: function _mouseStop(event, noPropagation) {\n      if (!event) {\n        return;\n      } //If we are using droppables, inform the manager about the drop\n\n\n      if ($.ui.ddmanager && !this.options.dropBehaviour) {\n        $.ui.ddmanager.drop(this, event);\n      }\n\n      if (this.options.revert) {\n        var that = this,\n            cur = this.placeholder.offset(),\n            axis = this.options.axis,\n            animation = {};\n\n        if (!axis || axis === \"x\") {\n          animation.left = cur.left - this.offset.parent.left - this.margins.left + (this.offsetParent[0] === this.document[0].body ? 0 : this.offsetParent[0].scrollLeft);\n        }\n\n        if (!axis || axis === \"y\") {\n          animation.top = cur.top - this.offset.parent.top - this.margins.top + (this.offsetParent[0] === this.document[0].body ? 0 : this.offsetParent[0].scrollTop);\n        }\n\n        this.reverting = true;\n        $(this.helper).animate(animation, parseInt(this.options.revert, 10) || 500, function () {\n          that._clear(event);\n        });\n      } else {\n        this._clear(event, noPropagation);\n      }\n\n      return false;\n    },\n    cancel: function cancel() {\n      if (this.dragging) {\n        this._mouseUp(new $.Event(\"mouseup\", {\n          target: null\n        }));\n\n        if (this.options.helper === \"original\") {\n          this.currentItem.css(this._storedCSS);\n\n          this._removeClass(this.currentItem, \"ui-sortable-helper\");\n        } else {\n          this.currentItem.show();\n        } //Post deactivating events to containers\n\n\n        for (var i = this.containers.length - 1; i >= 0; i--) {\n          this.containers[i]._trigger(\"deactivate\", null, this._uiHash(this));\n\n          if (this.containers[i].containerCache.over) {\n            this.containers[i]._trigger(\"out\", null, this._uiHash(this));\n\n            this.containers[i].containerCache.over = 0;\n          }\n        }\n      }\n\n      if (this.placeholder) {\n        //$(this.placeholder[0]).remove(); would have been the jQuery way - unfortunately,\n        // it unbinds ALL events from the original node!\n        if (this.placeholder[0].parentNode) {\n          this.placeholder[0].parentNode.removeChild(this.placeholder[0]);\n        }\n\n        if (this.options.helper !== \"original\" && this.helper && this.helper[0].parentNode) {\n          this.helper.remove();\n        }\n\n        $.extend(this, {\n          helper: null,\n          dragging: false,\n          reverting: false,\n          _noFinalSort: null\n        });\n\n        if (this.domPosition.prev) {\n          $(this.domPosition.prev).after(this.currentItem);\n        } else {\n          $(this.domPosition.parent).prepend(this.currentItem);\n        }\n      }\n\n      return this;\n    },\n    serialize: function serialize(o) {\n      var items = this._getItemsAsjQuery(o && o.connected),\n          str = [];\n\n      o = o || {};\n      $(items).each(function () {\n        var res = ($(o.item || this).attr(o.attribute || \"id\") || \"\").match(o.expression || /(.+)[\\-=_](.+)/);\n\n        if (res) {\n          str.push((o.key || res[1] + \"[]\") + \"=\" + (o.key && o.expression ? res[1] : res[2]));\n        }\n      });\n\n      if (!str.length && o.key) {\n        str.push(o.key + \"=\");\n      }\n\n      return str.join(\"&\");\n    },\n    toArray: function toArray(o) {\n      var items = this._getItemsAsjQuery(o && o.connected),\n          ret = [];\n\n      o = o || {};\n      items.each(function () {\n        ret.push($(o.item || this).attr(o.attribute || \"id\") || \"\");\n      });\n      return ret;\n    },\n\n    /* Be careful with the following core functions */\n    _intersectsWith: function _intersectsWith(item) {\n      var x1 = this.positionAbs.left,\n          x2 = x1 + this.helperProportions.width,\n          y1 = this.positionAbs.top,\n          y2 = y1 + this.helperProportions.height,\n          l = item.left,\n          r = l + item.width,\n          t = item.top,\n          b = t + item.height,\n          dyClick = this.offset.click.top,\n          dxClick = this.offset.click.left,\n          isOverElementHeight = this.options.axis === \"x\" || y1 + dyClick > t && y1 + dyClick < b,\n          isOverElementWidth = this.options.axis === \"y\" || x1 + dxClick > l && x1 + dxClick < r,\n          isOverElement = isOverElementHeight && isOverElementWidth;\n\n      if (this.options.tolerance === \"pointer\" || this.options.forcePointerForContainers || this.options.tolerance !== \"pointer\" && this.helperProportions[this.floating ? \"width\" : \"height\"] > item[this.floating ? \"width\" : \"height\"]) {\n        return isOverElement;\n      } else {\n        return l < x1 + this.helperProportions.width / 2 && // Right Half\n        x2 - this.helperProportions.width / 2 < r && // Left Half\n        t < y1 + this.helperProportions.height / 2 && // Bottom Half\n        y2 - this.helperProportions.height / 2 < b; // Top Half\n      }\n    },\n    _intersectsWithPointer: function _intersectsWithPointer(item) {\n      var verticalDirection,\n          horizontalDirection,\n          isOverElementHeight = this.options.axis === \"x\" || this._isOverAxis(this.positionAbs.top + this.offset.click.top, item.top, item.height),\n          isOverElementWidth = this.options.axis === \"y\" || this._isOverAxis(this.positionAbs.left + this.offset.click.left, item.left, item.width),\n          isOverElement = isOverElementHeight && isOverElementWidth;\n\n      if (!isOverElement) {\n        return false;\n      }\n\n      verticalDirection = this._getDragVerticalDirection();\n      horizontalDirection = this._getDragHorizontalDirection();\n      return this.floating ? horizontalDirection === \"right\" || verticalDirection === \"down\" ? 2 : 1 : verticalDirection && (verticalDirection === \"down\" ? 2 : 1);\n    },\n    _intersectsWithSides: function _intersectsWithSides(item) {\n      var isOverBottomHalf = this._isOverAxis(this.positionAbs.top + this.offset.click.top, item.top + item.height / 2, item.height),\n          isOverRightHalf = this._isOverAxis(this.positionAbs.left + this.offset.click.left, item.left + item.width / 2, item.width),\n          verticalDirection = this._getDragVerticalDirection(),\n          horizontalDirection = this._getDragHorizontalDirection();\n\n      if (this.floating && horizontalDirection) {\n        return horizontalDirection === \"right\" && isOverRightHalf || horizontalDirection === \"left\" && !isOverRightHalf;\n      } else {\n        return verticalDirection && (verticalDirection === \"down\" && isOverBottomHalf || verticalDirection === \"up\" && !isOverBottomHalf);\n      }\n    },\n    _getDragVerticalDirection: function _getDragVerticalDirection() {\n      var delta = this.positionAbs.top - this.lastPositionAbs.top;\n      return delta !== 0 && (delta > 0 ? \"down\" : \"up\");\n    },\n    _getDragHorizontalDirection: function _getDragHorizontalDirection() {\n      var delta = this.positionAbs.left - this.lastPositionAbs.left;\n      return delta !== 0 && (delta > 0 ? \"right\" : \"left\");\n    },\n    refresh: function refresh(event) {\n      this._refreshItems(event);\n\n      this._setHandleClassName();\n\n      this.refreshPositions();\n      return this;\n    },\n    _connectWith: function _connectWith() {\n      var options = this.options;\n      return options.connectWith.constructor === String ? [options.connectWith] : options.connectWith;\n    },\n    _getItemsAsjQuery: function _getItemsAsjQuery(connected) {\n      var i,\n          j,\n          cur,\n          inst,\n          items = [],\n          queries = [],\n          connectWith = this._connectWith();\n\n      if (connectWith && connected) {\n        for (i = connectWith.length - 1; i >= 0; i--) {\n          cur = $(connectWith[i], this.document[0]);\n\n          for (j = cur.length - 1; j >= 0; j--) {\n            inst = $.data(cur[j], this.widgetFullName);\n\n            if (inst && inst !== this && !inst.options.disabled) {\n              queries.push([$.isFunction(inst.options.items) ? inst.options.items.call(inst.element) : $(inst.options.items, inst.element).not(\".ui-sortable-helper\").not(\".ui-sortable-placeholder\"), inst]);\n            }\n          }\n        }\n      }\n\n      queries.push([$.isFunction(this.options.items) ? this.options.items.call(this.element, null, {\n        options: this.options,\n        item: this.currentItem\n      }) : $(this.options.items, this.element).not(\".ui-sortable-helper\").not(\".ui-sortable-placeholder\"), this]);\n\n      function addItems() {\n        items.push(this);\n      }\n\n      for (i = queries.length - 1; i >= 0; i--) {\n        queries[i][0].each(addItems);\n      }\n\n      return $(items);\n    },\n    _removeCurrentsFromItems: function _removeCurrentsFromItems() {\n      var list = this.currentItem.find(\":data(\" + this.widgetName + \"-item)\");\n      this.items = $.grep(this.items, function (item) {\n        for (var j = 0; j < list.length; j++) {\n          if (list[j] === item.item[0]) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    },\n    _refreshItems: function _refreshItems(event) {\n      this.items = [];\n      this.containers = [this];\n\n      var i,\n          j,\n          cur,\n          inst,\n          targetData,\n          _queries,\n          item,\n          queriesLength,\n          items = this.items,\n          queries = [[$.isFunction(this.options.items) ? this.options.items.call(this.element[0], event, {\n        item: this.currentItem\n      }) : $(this.options.items, this.element), this]],\n          connectWith = this._connectWith(); //Shouldn't be run the first time through due to massive slow-down\n\n\n      if (connectWith && this.ready) {\n        for (i = connectWith.length - 1; i >= 0; i--) {\n          cur = $(connectWith[i], this.document[0]);\n\n          for (j = cur.length - 1; j >= 0; j--) {\n            inst = $.data(cur[j], this.widgetFullName);\n\n            if (inst && inst !== this && !inst.options.disabled) {\n              queries.push([$.isFunction(inst.options.items) ? inst.options.items.call(inst.element[0], event, {\n                item: this.currentItem\n              }) : $(inst.options.items, inst.element), inst]);\n              this.containers.push(inst);\n            }\n          }\n        }\n      }\n\n      for (i = queries.length - 1; i >= 0; i--) {\n        targetData = queries[i][1];\n        _queries = queries[i][0];\n\n        for (j = 0, queriesLength = _queries.length; j < queriesLength; j++) {\n          item = $(_queries[j]); // Data for target checking (mouse manager)\n\n          item.data(this.widgetName + \"-item\", targetData);\n          items.push({\n            item: item,\n            instance: targetData,\n            width: 0,\n            height: 0,\n            left: 0,\n            top: 0\n          });\n        }\n      }\n    },\n    refreshPositions: function refreshPositions(fast) {\n      // Determine whether items are being displayed horizontally\n      this.floating = this.items.length ? this.options.axis === \"x\" || this._isFloating(this.items[0].item) : false; //This has to be redone because due to the item being moved out/into the offsetParent,\n      // the offsetParent's position will change\n\n      if (this.offsetParent && this.helper) {\n        this.offset.parent = this._getParentOffset();\n      }\n\n      var i, item, t, p;\n\n      for (i = this.items.length - 1; i >= 0; i--) {\n        item = this.items[i]; //We ignore calculating positions of all connected containers when we're not over them\n\n        if (item.instance !== this.currentContainer && this.currentContainer && item.item[0] !== this.currentItem[0]) {\n          continue;\n        }\n\n        t = this.options.toleranceElement ? $(this.options.toleranceElement, item.item) : item.item;\n\n        if (!fast) {\n          item.width = t.outerWidth();\n          item.height = t.outerHeight();\n        }\n\n        p = t.offset();\n        item.left = p.left;\n        item.top = p.top;\n      }\n\n      if (this.options.custom && this.options.custom.refreshContainers) {\n        this.options.custom.refreshContainers.call(this);\n      } else {\n        for (i = this.containers.length - 1; i >= 0; i--) {\n          p = this.containers[i].element.offset();\n          this.containers[i].containerCache.left = p.left;\n          this.containers[i].containerCache.top = p.top;\n          this.containers[i].containerCache.width = this.containers[i].element.outerWidth();\n          this.containers[i].containerCache.height = this.containers[i].element.outerHeight();\n        }\n      }\n\n      return this;\n    },\n    _createPlaceholder: function _createPlaceholder(that) {\n      that = that || this;\n      var className,\n          o = that.options;\n\n      if (!o.placeholder || o.placeholder.constructor === String) {\n        className = o.placeholder;\n        o.placeholder = {\n          element: function element() {\n            var nodeName = that.currentItem[0].nodeName.toLowerCase(),\n                element = $(\"<\" + nodeName + \">\", that.document[0]);\n\n            that._addClass(element, \"ui-sortable-placeholder\", className || that.currentItem[0].className)._removeClass(element, \"ui-sortable-helper\");\n\n            if (nodeName === \"tbody\") {\n              that._createTrPlaceholder(that.currentItem.find(\"tr\").eq(0), $(\"<tr>\", that.document[0]).appendTo(element));\n            } else if (nodeName === \"tr\") {\n              that._createTrPlaceholder(that.currentItem, element);\n            } else if (nodeName === \"img\") {\n              element.attr(\"src\", that.currentItem.attr(\"src\"));\n            }\n\n            if (!className) {\n              element.css(\"visibility\", \"hidden\");\n            }\n\n            return element;\n          },\n          update: function update(container, p) {\n            // 1. If a className is set as 'placeholder option, we don't force sizes -\n            // the class is responsible for that\n            // 2. The option 'forcePlaceholderSize can be enabled to force it even if a\n            // class name is specified\n            if (className && !o.forcePlaceholderSize) {\n              return;\n            } //If the element doesn't have a actual height by itself (without styles coming\n            // from a stylesheet), it receives the inline height from the dragged item\n\n\n            if (!p.height()) {\n              p.height(that.currentItem.innerHeight() - parseInt(that.currentItem.css(\"paddingTop\") || 0, 10) - parseInt(that.currentItem.css(\"paddingBottom\") || 0, 10));\n            }\n\n            if (!p.width()) {\n              p.width(that.currentItem.innerWidth() - parseInt(that.currentItem.css(\"paddingLeft\") || 0, 10) - parseInt(that.currentItem.css(\"paddingRight\") || 0, 10));\n            }\n          }\n        };\n      } //Create the placeholder\n\n\n      that.placeholder = $(o.placeholder.element.call(that.element, that.currentItem)); //Append it after the actual current item\n\n      that.currentItem.after(that.placeholder); //Update the size of the placeholder (TODO: Logic to fuzzy, see line 316/317)\n\n      o.placeholder.update(that, that.placeholder);\n    },\n    _createTrPlaceholder: function _createTrPlaceholder(sourceTr, targetTr) {\n      var that = this;\n      sourceTr.children().each(function () {\n        $(\"<td>&#160;</td>\", that.document[0]).attr(\"colspan\", $(this).attr(\"colspan\") || 1).appendTo(targetTr);\n      });\n    },\n    _contactContainers: function _contactContainers(event) {\n      var i,\n          j,\n          dist,\n          itemWithLeastDistance,\n          posProperty,\n          sizeProperty,\n          cur,\n          nearBottom,\n          floating,\n          axis,\n          innermostContainer = null,\n          innermostIndex = null; // Get innermost container that intersects with item\n\n      for (i = this.containers.length - 1; i >= 0; i--) {\n        // Never consider a container that's located within the item itself\n        if ($.contains(this.currentItem[0], this.containers[i].element[0])) {\n          continue;\n        }\n\n        if (this._intersectsWith(this.containers[i].containerCache)) {\n          // If we've already found a container and it's more \"inner\" than this, then continue\n          if (innermostContainer && $.contains(this.containers[i].element[0], innermostContainer.element[0])) {\n            continue;\n          }\n\n          innermostContainer = this.containers[i];\n          innermostIndex = i;\n        } else {\n          // container doesn't intersect. trigger \"out\" event if necessary\n          if (this.containers[i].containerCache.over) {\n            this.containers[i]._trigger(\"out\", event, this._uiHash(this));\n\n            this.containers[i].containerCache.over = 0;\n          }\n        }\n      } // If no intersecting containers found, return\n\n\n      if (!innermostContainer) {\n        return;\n      } // Move the item into the container if it's not there already\n\n\n      if (this.containers.length === 1) {\n        if (!this.containers[innermostIndex].containerCache.over) {\n          this.containers[innermostIndex]._trigger(\"over\", event, this._uiHash(this));\n\n          this.containers[innermostIndex].containerCache.over = 1;\n        }\n      } else {\n        // When entering a new container, we will find the item with the least distance and\n        // append our item near it\n        dist = 10000;\n        itemWithLeastDistance = null;\n        floating = innermostContainer.floating || this._isFloating(this.currentItem);\n        posProperty = floating ? \"left\" : \"top\";\n        sizeProperty = floating ? \"width\" : \"height\";\n        axis = floating ? \"pageX\" : \"pageY\";\n\n        for (j = this.items.length - 1; j >= 0; j--) {\n          if (!$.contains(this.containers[innermostIndex].element[0], this.items[j].item[0])) {\n            continue;\n          }\n\n          if (this.items[j].item[0] === this.currentItem[0]) {\n            continue;\n          }\n\n          cur = this.items[j].item.offset()[posProperty];\n          nearBottom = false;\n\n          if (event[axis] - cur > this.items[j][sizeProperty] / 2) {\n            nearBottom = true;\n          }\n\n          if (Math.abs(event[axis] - cur) < dist) {\n            dist = Math.abs(event[axis] - cur);\n            itemWithLeastDistance = this.items[j];\n            this.direction = nearBottom ? \"up\" : \"down\";\n          }\n        } //Check if dropOnEmpty is enabled\n\n\n        if (!itemWithLeastDistance && !this.options.dropOnEmpty) {\n          return;\n        }\n\n        if (this.currentContainer === this.containers[innermostIndex]) {\n          if (!this.currentContainer.containerCache.over) {\n            this.containers[innermostIndex]._trigger(\"over\", event, this._uiHash());\n\n            this.currentContainer.containerCache.over = 1;\n          }\n\n          return;\n        }\n\n        itemWithLeastDistance ? this._rearrange(event, itemWithLeastDistance, null, true) : this._rearrange(event, null, this.containers[innermostIndex].element, true);\n\n        this._trigger(\"change\", event, this._uiHash());\n\n        this.containers[innermostIndex]._trigger(\"change\", event, this._uiHash(this));\n\n        this.currentContainer = this.containers[innermostIndex]; //Update the placeholder\n\n        this.options.placeholder.update(this.currentContainer, this.placeholder);\n\n        this.containers[innermostIndex]._trigger(\"over\", event, this._uiHash(this));\n\n        this.containers[innermostIndex].containerCache.over = 1;\n      }\n    },\n    _createHelper: function _createHelper(event) {\n      var o = this.options,\n          helper = $.isFunction(o.helper) ? $(o.helper.apply(this.element[0], [event, this.currentItem])) : o.helper === \"clone\" ? this.currentItem.clone() : this.currentItem; //Add the helper to the DOM if that didn't happen already\n\n      if (!helper.parents(\"body\").length) {\n        $(o.appendTo !== \"parent\" ? o.appendTo : this.currentItem[0].parentNode)[0].appendChild(helper[0]);\n      }\n\n      if (helper[0] === this.currentItem[0]) {\n        this._storedCSS = {\n          width: this.currentItem[0].style.width,\n          height: this.currentItem[0].style.height,\n          position: this.currentItem.css(\"position\"),\n          top: this.currentItem.css(\"top\"),\n          left: this.currentItem.css(\"left\")\n        };\n      }\n\n      if (!helper[0].style.width || o.forceHelperSize) {\n        helper.width(this.currentItem.width());\n      }\n\n      if (!helper[0].style.height || o.forceHelperSize) {\n        helper.height(this.currentItem.height());\n      }\n\n      return helper;\n    },\n    _adjustOffsetFromHelper: function _adjustOffsetFromHelper(obj) {\n      if (typeof obj === \"string\") {\n        obj = obj.split(\" \");\n      }\n\n      if ($.isArray(obj)) {\n        obj = {\n          left: +obj[0],\n          top: +obj[1] || 0\n        };\n      }\n\n      if (\"left\" in obj) {\n        this.offset.click.left = obj.left + this.margins.left;\n      }\n\n      if (\"right\" in obj) {\n        this.offset.click.left = this.helperProportions.width - obj.right + this.margins.left;\n      }\n\n      if (\"top\" in obj) {\n        this.offset.click.top = obj.top + this.margins.top;\n      }\n\n      if (\"bottom\" in obj) {\n        this.offset.click.top = this.helperProportions.height - obj.bottom + this.margins.top;\n      }\n    },\n    _getParentOffset: function _getParentOffset() {\n      //Get the offsetParent and cache its position\n      this.offsetParent = this.helper.offsetParent();\n      var po = this.offsetParent.offset(); // This is a special case where we need to modify a offset calculated on start, since the\n      // following happened:\n      // 1. The position of the helper is absolute, so it's position is calculated based on the\n      // next positioned parent\n      // 2. The actual offset parent is a child of the scroll parent, and the scroll parent isn't\n      // the document, which means that the scroll is included in the initial calculation of the\n      // offset of the parent, and never recalculated upon drag\n\n      if (this.cssPosition === \"absolute\" && this.scrollParent[0] !== this.document[0] && $.contains(this.scrollParent[0], this.offsetParent[0])) {\n        po.left += this.scrollParent.scrollLeft();\n        po.top += this.scrollParent.scrollTop();\n      } // This needs to be actually done for all browsers, since pageX/pageY includes this\n      // information with an ugly IE fix\n\n\n      if (this.offsetParent[0] === this.document[0].body || this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() === \"html\" && $.ui.ie) {\n        po = {\n          top: 0,\n          left: 0\n        };\n      }\n\n      return {\n        top: po.top + (parseInt(this.offsetParent.css(\"borderTopWidth\"), 10) || 0),\n        left: po.left + (parseInt(this.offsetParent.css(\"borderLeftWidth\"), 10) || 0)\n      };\n    },\n    _getRelativeOffset: function _getRelativeOffset() {\n      if (this.cssPosition === \"relative\") {\n        var p = this.currentItem.position();\n        return {\n          top: p.top - (parseInt(this.helper.css(\"top\"), 10) || 0) + this.scrollParent.scrollTop(),\n          left: p.left - (parseInt(this.helper.css(\"left\"), 10) || 0) + this.scrollParent.scrollLeft()\n        };\n      } else {\n        return {\n          top: 0,\n          left: 0\n        };\n      }\n    },\n    _cacheMargins: function _cacheMargins() {\n      this.margins = {\n        left: parseInt(this.currentItem.css(\"marginLeft\"), 10) || 0,\n        top: parseInt(this.currentItem.css(\"marginTop\"), 10) || 0\n      };\n    },\n    _cacheHelperProportions: function _cacheHelperProportions() {\n      this.helperProportions = {\n        width: this.helper.outerWidth(),\n        height: this.helper.outerHeight()\n      };\n    },\n    _setContainment: function _setContainment() {\n      var ce,\n          co,\n          over,\n          o = this.options;\n\n      if (o.containment === \"parent\") {\n        o.containment = this.helper[0].parentNode;\n      }\n\n      if (o.containment === \"document\" || o.containment === \"window\") {\n        this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, o.containment === \"document\" ? this.document.width() : this.window.width() - this.helperProportions.width - this.margins.left, (o.containment === \"document\" ? this.document.height() || document.body.parentNode.scrollHeight : this.window.height() || this.document[0].body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top];\n      }\n\n      if (!/^(document|window|parent)$/.test(o.containment)) {\n        ce = $(o.containment)[0];\n        co = $(o.containment).offset();\n        over = $(ce).css(\"overflow\") !== \"hidden\";\n        this.containment = [co.left + (parseInt($(ce).css(\"borderLeftWidth\"), 10) || 0) + (parseInt($(ce).css(\"paddingLeft\"), 10) || 0) - this.margins.left, co.top + (parseInt($(ce).css(\"borderTopWidth\"), 10) || 0) + (parseInt($(ce).css(\"paddingTop\"), 10) || 0) - this.margins.top, co.left + (over ? Math.max(ce.scrollWidth, ce.offsetWidth) : ce.offsetWidth) - (parseInt($(ce).css(\"borderLeftWidth\"), 10) || 0) - (parseInt($(ce).css(\"paddingRight\"), 10) || 0) - this.helperProportions.width - this.margins.left, co.top + (over ? Math.max(ce.scrollHeight, ce.offsetHeight) : ce.offsetHeight) - (parseInt($(ce).css(\"borderTopWidth\"), 10) || 0) - (parseInt($(ce).css(\"paddingBottom\"), 10) || 0) - this.helperProportions.height - this.margins.top];\n      }\n    },\n    _convertPositionTo: function _convertPositionTo(d, pos) {\n      if (!pos) {\n        pos = this.position;\n      }\n\n      var mod = d === \"absolute\" ? 1 : -1,\n          scroll = this.cssPosition === \"absolute\" && !(this.scrollParent[0] !== this.document[0] && $.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,\n          scrollIsRootNode = /(html|body)/i.test(scroll[0].tagName);\n      return {\n        top: // The absolute mouse position\n        pos.top + // Only for relative positioned nodes: Relative offset from element to offset parent\n        this.offset.relative.top * mod + // The offsetParent's offset without borders (offset + border)\n        this.offset.parent.top * mod - (this.cssPosition === \"fixed\" ? -this.scrollParent.scrollTop() : scrollIsRootNode ? 0 : scroll.scrollTop()) * mod,\n        left: // The absolute mouse position\n        pos.left + // Only for relative positioned nodes: Relative offset from element to offset parent\n        this.offset.relative.left * mod + // The offsetParent's offset without borders (offset + border)\n        this.offset.parent.left * mod - (this.cssPosition === \"fixed\" ? -this.scrollParent.scrollLeft() : scrollIsRootNode ? 0 : scroll.scrollLeft()) * mod\n      };\n    },\n    _generatePosition: function _generatePosition(event) {\n      var top,\n          left,\n          o = this.options,\n          pageX = event.pageX,\n          pageY = event.pageY,\n          scroll = this.cssPosition === \"absolute\" && !(this.scrollParent[0] !== this.document[0] && $.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,\n          scrollIsRootNode = /(html|body)/i.test(scroll[0].tagName); // This is another very weird special case that only happens for relative elements:\n      // 1. If the css position is relative\n      // 2. and the scroll parent is the document or similar to the offset parent\n      // we have to refresh the relative offset during the scroll so there are no jumps\n\n      if (this.cssPosition === \"relative\" && !(this.scrollParent[0] !== this.document[0] && this.scrollParent[0] !== this.offsetParent[0])) {\n        this.offset.relative = this._getRelativeOffset();\n      }\n      /*\n       * - Position constraining -\n       * Constrain the position to a mix of grid, containment.\n       */\n\n\n      if (this.originalPosition) {\n        //If we are not dragging yet, we won't check for options\n        if (this.containment) {\n          if (event.pageX - this.offset.click.left < this.containment[0]) {\n            pageX = this.containment[0] + this.offset.click.left;\n          }\n\n          if (event.pageY - this.offset.click.top < this.containment[1]) {\n            pageY = this.containment[1] + this.offset.click.top;\n          }\n\n          if (event.pageX - this.offset.click.left > this.containment[2]) {\n            pageX = this.containment[2] + this.offset.click.left;\n          }\n\n          if (event.pageY - this.offset.click.top > this.containment[3]) {\n            pageY = this.containment[3] + this.offset.click.top;\n          }\n        }\n\n        if (o.grid) {\n          top = this.originalPageY + Math.round((pageY - this.originalPageY) / o.grid[1]) * o.grid[1];\n          pageY = this.containment ? top - this.offset.click.top >= this.containment[1] && top - this.offset.click.top <= this.containment[3] ? top : top - this.offset.click.top >= this.containment[1] ? top - o.grid[1] : top + o.grid[1] : top;\n          left = this.originalPageX + Math.round((pageX - this.originalPageX) / o.grid[0]) * o.grid[0];\n          pageX = this.containment ? left - this.offset.click.left >= this.containment[0] && left - this.offset.click.left <= this.containment[2] ? left : left - this.offset.click.left >= this.containment[0] ? left - o.grid[0] : left + o.grid[0] : left;\n        }\n      }\n\n      return {\n        top: // The absolute mouse position\n        pageY - // Click offset (relative to the element)\n        this.offset.click.top - // Only for relative positioned nodes: Relative offset from element to offset parent\n        this.offset.relative.top - // The offsetParent's offset without borders (offset + border)\n        this.offset.parent.top + (this.cssPosition === \"fixed\" ? -this.scrollParent.scrollTop() : scrollIsRootNode ? 0 : scroll.scrollTop()),\n        left: // The absolute mouse position\n        pageX - // Click offset (relative to the element)\n        this.offset.click.left - // Only for relative positioned nodes: Relative offset from element to offset parent\n        this.offset.relative.left - // The offsetParent's offset without borders (offset + border)\n        this.offset.parent.left + (this.cssPosition === \"fixed\" ? -this.scrollParent.scrollLeft() : scrollIsRootNode ? 0 : scroll.scrollLeft())\n      };\n    },\n    _rearrange: function _rearrange(event, i, a, hardRefresh) {\n      a ? a[0].appendChild(this.placeholder[0]) : i.item[0].parentNode.insertBefore(this.placeholder[0], this.direction === \"down\" ? i.item[0] : i.item[0].nextSibling); //Various things done here to improve the performance:\n      // 1. we create a setTimeout, that calls refreshPositions\n      // 2. on the instance, we have a counter variable, that get's higher after every append\n      // 3. on the local scope, we copy the counter variable, and check in the timeout,\n      // if it's still the same\n      // 4. this lets only the last addition to the timeout stack through\n\n      this.counter = this.counter ? ++this.counter : 1;\n      var counter = this.counter;\n\n      this._delay(function () {\n        if (counter === this.counter) {\n          //Precompute after each DOM insertion, NOT on mousemove\n          this.refreshPositions(!hardRefresh);\n        }\n      });\n    },\n    _clear: function _clear(event, noPropagation) {\n      this.reverting = false; // We delay all events that have to be triggered to after the point where the placeholder\n      // has been removed and everything else normalized again\n\n      var i,\n          delayedTriggers = []; // We first have to update the dom position of the actual currentItem\n      // Note: don't do it if the current item is already removed (by a user), or it gets\n      // reappended (see #4088)\n\n      if (!this._noFinalSort && this.currentItem.parent().length) {\n        this.placeholder.before(this.currentItem);\n      }\n\n      this._noFinalSort = null;\n\n      if (this.helper[0] === this.currentItem[0]) {\n        for (i in this._storedCSS) {\n          if (this._storedCSS[i] === \"auto\" || this._storedCSS[i] === \"static\") {\n            this._storedCSS[i] = \"\";\n          }\n        }\n\n        this.currentItem.css(this._storedCSS);\n\n        this._removeClass(this.currentItem, \"ui-sortable-helper\");\n      } else {\n        this.currentItem.show();\n      }\n\n      if (this.fromOutside && !noPropagation) {\n        delayedTriggers.push(function (event) {\n          this._trigger(\"receive\", event, this._uiHash(this.fromOutside));\n        });\n      }\n\n      if ((this.fromOutside || this.domPosition.prev !== this.currentItem.prev().not(\".ui-sortable-helper\")[0] || this.domPosition.parent !== this.currentItem.parent()[0]) && !noPropagation) {\n        // Trigger update callback if the DOM position has changed\n        delayedTriggers.push(function (event) {\n          this._trigger(\"update\", event, this._uiHash());\n        });\n      } // Check if the items Container has Changed and trigger appropriate\n      // events.\n\n\n      if (this !== this.currentContainer) {\n        if (!noPropagation) {\n          delayedTriggers.push(function (event) {\n            this._trigger(\"remove\", event, this._uiHash());\n          });\n          delayedTriggers.push(function (c) {\n            return function (event) {\n              c._trigger(\"receive\", event, this._uiHash(this));\n            };\n          }.call(this, this.currentContainer));\n          delayedTriggers.push(function (c) {\n            return function (event) {\n              c._trigger(\"update\", event, this._uiHash(this));\n            };\n          }.call(this, this.currentContainer));\n        }\n      } //Post events to containers\n\n\n      function delayEvent(type, instance, container) {\n        return function (event) {\n          container._trigger(type, event, instance._uiHash(instance));\n        };\n      }\n\n      for (i = this.containers.length - 1; i >= 0; i--) {\n        if (!noPropagation) {\n          delayedTriggers.push(delayEvent(\"deactivate\", this, this.containers[i]));\n        }\n\n        if (this.containers[i].containerCache.over) {\n          delayedTriggers.push(delayEvent(\"out\", this, this.containers[i]));\n          this.containers[i].containerCache.over = 0;\n        }\n      } //Do what was originally in plugins\n\n\n      if (this.storedCursor) {\n        this.document.find(\"body\").css(\"cursor\", this.storedCursor);\n        this.storedStylesheet.remove();\n      }\n\n      if (this._storedOpacity) {\n        this.helper.css(\"opacity\", this._storedOpacity);\n      }\n\n      if (this._storedZIndex) {\n        this.helper.css(\"zIndex\", this._storedZIndex === \"auto\" ? \"\" : this._storedZIndex);\n      }\n\n      this.dragging = false;\n\n      if (!noPropagation) {\n        this._trigger(\"beforeStop\", event, this._uiHash());\n      } //$(this.placeholder[0]).remove(); would have been the jQuery way - unfortunately,\n      // it unbinds ALL events from the original node!\n\n\n      this.placeholder[0].parentNode.removeChild(this.placeholder[0]);\n\n      if (!this.cancelHelperRemoval) {\n        if (this.helper[0] !== this.currentItem[0]) {\n          this.helper.remove();\n        }\n\n        this.helper = null;\n      }\n\n      if (!noPropagation) {\n        for (i = 0; i < delayedTriggers.length; i++) {\n          // Trigger all delayed events\n          delayedTriggers[i].call(this, event);\n        }\n\n        this._trigger(\"stop\", event, this._uiHash());\n      }\n\n      this.fromOutside = false;\n      return !this.cancelHelperRemoval;\n    },\n    _trigger: function _trigger() {\n      if ($.Widget.prototype._trigger.apply(this, arguments) === false) {\n        this.cancel();\n      }\n    },\n    _uiHash: function _uiHash(_inst) {\n      var inst = _inst || this;\n      return {\n        helper: inst.helper,\n        placeholder: inst.placeholder || $([]),\n        position: inst.position,\n        originalPosition: inst.originalPosition,\n        offset: inst.positionAbs,\n        item: inst.currentItem,\n        sender: _inst ? _inst.element : null\n      };\n    }\n  });\n});"],"sourceRoot":""}